"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[5053],{3394:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"expressions/scalarfunctions/check","title":"Check Functions","description":"Check functions help validate data quality and raise alerts for specific data issues.","source":"@site/docs/expressions/scalarfunctions/check.md","sourceDirName":"expressions/scalarfunctions","slug":"/expressions/scalarfunctions/check","permalink":"/flowtide/docs/expressions/scalarfunctions/check","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/expressions/scalarfunctions/check.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Datetime Functions","permalink":"/flowtide/docs/expressions/scalarfunctions/datetime"},"next":{"title":"List Functions","permalink":"/flowtide/docs/expressions/scalarfunctions/list"}}');var c=n(4848),i=n(8453);const r={sidebar_position:7},a="Check Functions",l={},o=[{value:"Check value",id:"check-value",level:2},{value:"SQL Usage",id:"sql-usage",level:3},{value:"Check true",id:"check-true",level:2},{value:"SQL Usage",id:"sql-usage-1",level:3}];function d(e){const s={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(s.header,{children:(0,c.jsx)(s.h1,{id:"check-functions",children:"Check Functions"})}),"\n",(0,c.jsxs)(s.p,{children:["Check functions help validate data quality and raise alerts for specific data issues.\nTo visualize check results, you need to add a ",(0,c.jsx)(s.code,{children:"CheckFailureListener"})," to the stream."]}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-csharp",children:'builder.Services.AddFlowtideStream("stream")\n  .WriteCheckFailuresToLogger() // Outputs check results to the logger \u2014 a good starting point\n'})}),"\n",(0,c.jsx)(s.h2,{id:"check-value",children:"Check value"}),"\n",(0,c.jsx)(s.p,{children:(0,c.jsx)(s.em,{children:"This function has no substrait equivalent"})}),"\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.code,{children:"check_value"})," takes in at least three arguments:"]}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.strong,{children:"Scalar value"})," - this value is passed through and returned by the function."]}),"\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.strong,{children:"Condition"})," - boolean condition of the check"]}),"\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.strong,{children:"Message"})," - String message that should be logged if the check fails."]}),"\n"]}),"\n",(0,c.jsx)(s.p,{children:"After these three arguments, any extra arguments are added as tags."}),"\n",(0,c.jsx)(s.h3,{id:"sql-usage",children:"SQL Usage"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-SQL",children:"select \n  CHECK_VALUE(column1, column1 < column2, 'Column1 is larger than column2: {column1} > {column2}', column1, column2) as val\nFROM ...\n"})}),"\n",(0,c.jsx)(s.h2,{id:"check-true",children:"Check true"}),"\n",(0,c.jsx)(s.p,{children:(0,c.jsx)(s.em,{children:"This function has no substrait equivalent"})}),"\n",(0,c.jsxs)(s.p,{children:[(0,c.jsx)(s.code,{children:"check_true"})," takes in at least two arguments:"]}),"\n",(0,c.jsxs)(s.ul,{children:["\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.strong,{children:"Condition"})," - boolean condition of the check, the result of this check is returned."]}),"\n",(0,c.jsxs)(s.li,{children:[(0,c.jsx)(s.strong,{children:"Message"})," - String message that should be logged if the check fails."]}),"\n"]}),"\n",(0,c.jsx)(s.p,{children:"After these two arguments, any extra arguments are added as tags."}),"\n",(0,c.jsx)(s.h3,{id:"sql-usage-1",children:"SQL Usage"}),"\n",(0,c.jsx)(s.pre,{children:(0,c.jsx)(s.code,{className:"language-SQL",children:"select \n  *\nFROM ...\nWHERE CHECK_TRUE(column1 < column2, 'Column1 is larger than column2: {column1} > {column2}', column1, column2)\n"})})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,c.jsx)(s,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>a});var t=n(6540);const c={},i=t.createContext(c);function r(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);