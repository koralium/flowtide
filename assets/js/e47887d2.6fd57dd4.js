"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7539],{7335:(n,o,e)=>{e.r(o),e.d(o,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var t=e(5893),s=e(1151);const i={sidebar_position:2},c="MongoDB Connector",r={id:"connectors/mongodb",title:"MongoDB Connector",description:"The MongoDB connector allows you to insert data into a MongoDB collection.",source:"@site/docs/connectors/mongodb.md",sourceDirName:"connectors",slug:"/connectors/mongodb",permalink:"/flowtide/docs/connectors/mongodb",draft:!1,unlisted:!1,editUrl:"https://github.com/koralium/flowtide/tree/main/docs/docs/connectors/mongodb.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"CosmosDB Connector",permalink:"/flowtide/docs/connectors/cosmosdb"},next:{title:"Elasticsearch Connector",permalink:"/flowtide/docs/connectors/elasticsearch"}},a={},l=[{value:"Sink",id:"sink",level:2}];function d(n){const o={code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{id:"mongodb-connector",children:"MongoDB Connector"}),"\n",(0,t.jsx)(o.p,{children:"The MongoDB connector allows you to insert data into a MongoDB collection.\nAt this time only a sink is implemented, there is no support yet to have MongoDB as a source."}),"\n",(0,t.jsx)(o.h2,{id:"sink",children:"Sink"}),"\n",(0,t.jsx)(o.p,{children:"The MongoDB sink allows the insertion of data into a MongoDB collection."}),"\n",(0,t.jsx)(o.p,{children:"The nuget package for the connector is:"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:"FlowtideDotNet.Connector.MongoDB"}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:"Its implementation waits fully until the stream has reached a steady state at a time T until it writes data to the collection.\nThis means that its table output can always be traced back to a state from the source systems."}),"\n",(0,t.jsxs)(o.p,{children:["To use the ",(0,t.jsx)(o.em,{children:"MongoDB Sink"})," add the following line to the ",(0,t.jsx)(o.em,{children:"ReadWriteFactory"}),":"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-csharp",children:'factory.AddMongoDbSink("regex pattern for tablename", new FlowtideMongoDBSinkOptions()\n    {\n        Collection = collection, //MongoDB collection\n        Database = databaseName, // MongoDB database\n        ConnectionString = connectionString, //Connection string to MongoDB\n        PrimaryKeys = primaryKeys //List of columns that will be treated as primary keys in the collection\n    });\n'})})]})}function h(n={}){const{wrapper:o}={...(0,s.a)(),...n.components};return o?(0,t.jsx)(o,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},1151:(n,o,e)=>{e.d(o,{Z:()=>r,a:()=>c});var t=e(7294);const s={},i=t.createContext(s);function c(n){const o=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(o):{...o,...n}}),[o,n])}function r(n){let o;return o=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),t.createElement(i.Provider,{value:o},n.children)}}}]);