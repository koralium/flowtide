"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9646],{2859:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>a});var t=s(5893),i=s(1151);const r={sidebar_position:4},l="String Functions",d={id:"expressions/scalarfunctions/string",title:"String Functions",description:"Concat",source:"@site/docs/expressions/scalarfunctions/string.md",sourceDirName:"expressions/scalarfunctions",slug:"/expressions/scalarfunctions/string",permalink:"/flowtide/docs/expressions/scalarfunctions/string",draft:!1,unlisted:!1,editUrl:"https://github.com/koralium/flowtide/tree/main/docs/docs/expressions/scalarfunctions/string.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Comparison Functions",permalink:"/flowtide/docs/expressions/scalarfunctions/comparison"},next:{title:"Rounding Functions",permalink:"/flowtide/docs/expressions/scalarfunctions/rounding"}},c={},a=[{value:"Concat",id:"concat",level:2},{value:"SQL Usage",id:"sql-usage",level:3},{value:"Lower",id:"lower",level:2},{value:"SQL Usage",id:"sql-usage-1",level:3},{value:"Upper",id:"upper",level:2},{value:"SQL Usage",id:"sql-usage-2",level:3},{value:"Trim",id:"trim",level:2},{value:"SQL Usage",id:"sql-usage-3",level:3},{value:"LTrim",id:"ltrim",level:2},{value:"SQL Usage",id:"sql-usage-4",level:3},{value:"RTrim",id:"rtrim",level:2},{value:"SQL Usage",id:"sql-usage-5",level:3},{value:"To String",id:"to-string",level:2},{value:"SQL Usage",id:"sql-usage-6",level:3}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"string-functions",children:"String Functions"}),"\n",(0,t.jsx)(n.h2,{id:"concat",children:"Concat"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://substrait.io/extensions/functions_string/#concat",children:"Substrait definition"})}),"\n",(0,t.jsx)(n.p,{children:"Concatinates two or more string values together."}),"\n",(0,t.jsx)(n.p,{children:"This function tries and convert non string values into the string type, example:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Input"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Output"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"'hello'"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"'hello'"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"13"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"'13'"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"13.4"}),(0,t.jsx)(n.td,{children:"Float"}),(0,t.jsx)(n.td,{children:"'13.4'"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"true"}),(0,t.jsx)(n.td,{children:"Bool"}),(0,t.jsx)(n.td,{children:"'true'"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"If any argument is null, the return value will always be null."}),"\n",(0,t.jsx)(n.h3,{id:"sql-usage",children:"SQL Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT c1 || ' hello ' || c2 FROM ... \n"})}),"\n",(0,t.jsx)(n.h2,{id:"lower",children:"Lower"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://substrait.io/extensions/functions_string/#lower",children:"Substrait definition"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the input string in all lowercase characters. If any other type than string is entered, the function will return 'null'."}),"\n",(0,t.jsx)(n.h3,{id:"sql-usage-1",children:"SQL Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT lower(c1) FROM ... \n"})}),"\n",(0,t.jsx)(n.h2,{id:"upper",children:"Upper"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://substrait.io/extensions/functions_string/#upper",children:"Substrait definition"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the input string in all uppercase characters. If any other type than string is entered, the function will return 'null'."}),"\n",(0,t.jsx)(n.h3,{id:"sql-usage-2",children:"SQL Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT upper(c1) FROM ... \n"})}),"\n",(0,t.jsx)(n.h2,{id:"trim",children:"Trim"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://substrait.io/extensions/functions_string/#trim",children:"Substrait definition"})}),"\n",(0,t.jsx)(n.p,{children:"Remove whitespaces from both sides of a string"}),"\n",(0,t.jsx)(n.h3,{id:"sql-usage-3",children:"SQL Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT trim(c1) FROM ... \n"})}),"\n",(0,t.jsx)(n.h2,{id:"ltrim",children:"LTrim"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://substrait.io/extensions/functions_string/#ltrim",children:"Substrait definition"})}),"\n",(0,t.jsx)(n.p,{children:"Remove whitespaces from the start of a string"}),"\n",(0,t.jsx)(n.h3,{id:"sql-usage-4",children:"SQL Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT ltrim(c1) FROM ... \n"})}),"\n",(0,t.jsx)(n.h2,{id:"rtrim",children:"RTrim"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://substrait.io/extensions/functions_string/#rtrim",children:"Substrait definition"})}),"\n",(0,t.jsx)(n.p,{children:"Remove whitespaces from the end of a string"}),"\n",(0,t.jsx)(n.h3,{id:"sql-usage-5",children:"SQL Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT rtrim(c1) FROM ... \n"})}),"\n",(0,t.jsx)(n.h2,{id:"to-string",children:"To String"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"No substrait definition exists for this function"})}),"\n",(0,t.jsx)(n.p,{children:"Converts different types to a string type."}),"\n",(0,t.jsx)(n.p,{children:"Example output:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Input"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Output"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"'hello'"}),(0,t.jsx)(n.td,{children:"String"}),(0,t.jsx)(n.td,{children:"'hello'"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"13"}),(0,t.jsx)(n.td,{children:"Int"}),(0,t.jsx)(n.td,{children:"'13'"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"13.4"}),(0,t.jsx)(n.td,{children:"Float"}),(0,t.jsx)(n.td,{children:"'13.4'"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"true"}),(0,t.jsx)(n.td,{children:"Bool"}),(0,t.jsx)(n.td,{children:"'true'"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"sql-usage-6",children:"SQL Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT to_string(c1) FROM ... \n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>d,a:()=>l});var t=s(7294);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);