"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[9709],{2897:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"deployment/pauseresume","title":"Pause And Resume","description":"It is possible to pause and resume a flowtide stream, this is useful when there might be maintainance work on a source system, or as a panic button to stop","source":"@site/docs/deployment/pauseresume.md","sourceDirName":"deployment","slug":"/deployment/pauseresume","permalink":"/flowtide/docs/deployment/pauseresume","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/deployment/pauseresume.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Deployment","permalink":"/flowtide/docs/deployment/"},"next":{"title":"Monitoring","permalink":"/flowtide/docs/category/monitoring"}}');var o=s(4848),i=s(8453);const a={sidebar_position:1},r="Pause And Resume",d={},u=[{value:"Pause and stop using IConfiguration",id:"pause-and-stop-using-iconfiguration",level:2},{value:"Pause and stop using API endpoint",id:"pause-and-stop-using-api-endpoint",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"pause-and-resume",children:"Pause And Resume"})}),"\n",(0,o.jsx)(n.p,{children:"It is possible to pause and resume a flowtide stream, this is useful when there might be maintainance work on a source system, or as a panic button to stop\nthe execution."}),"\n",(0,o.jsx)(n.p,{children:"A pause does not stop the stream, but stops the traversal of all events inside of the stream. This means that resuming a paused stream is quick and does\nnot need to download any state from persistent storage."}),"\n",(0,o.jsx)(n.h2,{id:"pause-and-stop-using-iconfiguration",children:"Pause and stop using IConfiguration"}),"\n",(0,o.jsxs)(n.p,{children:["One of the easier ways to add pause and resume is to utilize ",(0,o.jsx)(n.code,{children:"IConfiguration"})," in .NET. Flowtide uses an ",(0,o.jsx)(n.code,{children:"IOptionsMonitor<FlowtidePauseOptions>"})," to check\nfor changes on the configuration and pauses and resumes the stream based on the value."]}),"\n",(0,o.jsx)(n.p,{children:"The class looks as follows:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"public class FlowtidePauseOptions\n{\n    public bool IsPaused { get; set; }\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["So to utilize this when using ",(0,o.jsx)(n.code,{children:"FlowtideDotNet.AspNetCore"})," or ",(0,o.jsx)(n.code,{children:"FlowtideDotNet.DependencyInjection"})," you add the following:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'var builder = WebApplication.CreateBuilder(args);\n\n...\n\n// Map flowtide pause options to enable pausing and resuming from configuration\nbuilder.Services.AddOptions<FlowtidePauseOptions>()\n    .Bind(builder.Configuration.GetSection("your_section"));\n\n...\n\n// Add the stream as normal\nbuilder.Services.AddFlowtideStream("stream_name")\n...\n'})}),"\n",(0,o.jsxs)(n.p,{children:["This is best fitted with an ",(0,o.jsx)(n.code,{children:"IConfiguration"})," provider that supports loading changes dynamically such as Hashicorp Vault or Azure Key Vault.\nPausing and resuming using ",(0,o.jsx)(n.code,{children:"IConfiguration"}),"provider is dependent on the update frequency of the provider, so to utilize this fully this interval should be\nkept quite low."]}),"\n",(0,o.jsx)(n.h2,{id:"pause-and-stop-using-api-endpoint",children:"Pause and stop using API endpoint"}),"\n",(0,o.jsxs)(n.p,{children:["When using ",(0,o.jsx)(n.code,{children:"FlowtideDotNet.AspNetCore"})," you can also map API endpoints to allow for pause and resume."]}),"\n",(0,o.jsx)(n.p,{children:"Example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'var builder = WebApplication.CreateBuilder(args);\n\n...\n\n// Add the stream as normal\nbuilder.Services.AddFlowtideStream("stream_name")\n\n...\n\nvar app = builder.Build();\n\n...\n\n// Map pause and resume endpoints\napp.UseFlowtidePauseResumeEndpoints("base_path");\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Two endpoints are registered under the base path, ",(0,o.jsx)(n.code,{children:"/pause"})," and ",(0,o.jsx)(n.code,{children:"/resume"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var t=s(6540);const o={},i=t.createContext(o);function a(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);