"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[6380],{4231:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"connectors/permify","title":"Permify Connector","description":"The Permify Connector allows you to read and write data to/from Permify which is an authorization service built on Zanzibar.","source":"@site/docs/connectors/permify.md","sourceDirName":"connectors","slug":"/connectors/permify","permalink":"/flowtide/docs/connectors/permify","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/connectors/permify.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"AuthZed/SpiceDB Connector","permalink":"/flowtide/docs/connectors/spicedb"},"next":{"title":"Deployment","permalink":"/flowtide/docs/deployment/"}}');var t=i(4848),s=i(8453);const o={sidebar_position:10},l="Permify Connector",a={},c=[{value:"Relationship Sink",id:"relationship-sink",level:2},{value:"Events",id:"events",level:3},{value:"Relationship Source",id:"relationship-source",level:2},{value:"Materialize/Denormalize Permissions",id:"materializedenormalize-permissions",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"permify-connector",children:"Permify Connector"})}),"\n",(0,t.jsxs)(n.p,{children:["The Permify Connector allows you to read and write data to/from ",(0,t.jsx)(n.a,{href:"https://permify.co/",children:"Permify"})," which is an authorization service built on Zanzibar."]}),"\n",(0,t.jsx)(n.p,{children:"In Permify you can write both relationships and attributes to an entity. At this point there is only support to read and write relationships."}),"\n",(0,t.jsx)(n.h2,{id:"relationship-sink",children:"Relationship Sink"}),"\n",(0,t.jsx)(n.p,{children:"The relationship sink allows inserting relationship data from other sources into Permify."}),"\n",(0,t.jsx)(n.p,{children:"These columns are required to insert data:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"subject_type"})," - subject type"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"subject_id"})," - identifier of the subject"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"relation"})," - relation name"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"entity_type"})," - Entity type"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"entity_id"})," - identifier of the entity."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Optional:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"subject_relation"})," - optional subject relation."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["To use the ",(0,t.jsx)(n.em,{children:"Permify Relationship Sink"})," add the following line to the ",(0,t.jsx)(n.em,{children:"ConnectorManager"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'connectorManager.AddPermifyRelationshipSink("regex pattern for tablename", new PermifySinkOptions()\n{\n    Channel = grpcChannel,\n    TenantId = tenantId\n});\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The regex pattern should match what you write in ",(0,t.jsx)(n.em,{children:"SQL"})," as the table name in the insert statement."]}),"\n",(0,t.jsx)(n.p,{children:"Sql example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"INSERT INTO permify\nSELECT \n    'user' as subject_type,\n    o.userkey as subject_id,\n    'reader' as relation,\n    'document' as entity_type,\n    o.orderkey as entity_id\nFROM orders o\n"})}),"\n",(0,t.jsx)(n.h3,{id:"events",children:"Events"}),"\n",(0,t.jsx)(n.p,{children:"The following event listener exist so far in the Permify relationship sink:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"OnWatermarkFunc"})," - Called after a watermark is recieved and the data has been added to Permify, also contains the last recieved snaptoken from Permify."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"relationship-source",children:"Relationship Source"}),"\n",(0,t.jsx)(n.p,{children:"The relationship source allows reading relationship data from Permify and use it in your data streams."}),"\n",(0,t.jsx)(n.p,{children:"The following columns are returned:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"subject_type"})," - subject type"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"subject_id"})," - identifier of the subject"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"relation"})," - relation name"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"entity_type"})," - resource type"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"entity_id"})," - identifier of the resource."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"subject_relation"})," - optional subject relation."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example on using the relationship source:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'connectorManager.AddPermifyRelationshipSource("regex pattern for tablename", new PermifySourceOptions()\n{\n    Channel = grpcChannel,\n    TenantId = tenantId\n});\n'})}),"\n",(0,t.jsx)(n.h2,{id:"materializedenormalize-permissions",children:"Materialize/Denormalize Permissions"}),"\n",(0,t.jsx)(n.p,{children:"It is not yet possible to materialize/denormalize permissions from Permify."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var r=i(6540);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);