"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2333],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),p=l(n),d=r,f=p["".concat(c,".").concat(d)]||p[d]||u[d]||a;return n?o.createElement(f,s(s({ref:t},m),{},{components:n})):o.createElement(f,s({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:r,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6035:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:2},s="CosmosDB Connector",i={unversionedId:"connectors/cosmosdb",id:"connectors/cosmosdb",title:"CosmosDB Connector",description:"The CosmosDB connector allows you to insert data into a CosmosDB container.",source:"@site/docs/connectors/cosmosdb.md",sourceDirName:"connectors",slug:"/connectors/cosmosdb",permalink:"/flowtide/docs/connectors/cosmosdb",draft:!1,editUrl:"https://github.com/koralium/flowtide/tree/main/docs/docs/connectors/cosmosdb.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"SQL Server Connector",permalink:"/flowtide/docs/connectors/sqlserver"},next:{title:"Elasticsearch Connector",permalink:"/flowtide/docs/connectors/elasticsearch"}},c={},l=[{value:"Sink",id:"sink",level:2},{value:"Example",id:"example",level:3}],m={toc:l},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cosmosdb-connector"},"CosmosDB Connector"),(0,r.kt)("p",null,"The CosmosDB connector allows you to insert data into a CosmosDB container.\nAt this time only a sink is implemented, there is no support yet to have CosmosDB as a source."),(0,r.kt)("h2",{id:"sink"},"Sink"),(0,r.kt)("p",null,"The CosmosDB sink allows the insertion of data into a CosmosDB container."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"All CosmosDB insertions must contain a column called 'id' and also a column that matches the configured partition key on the CosmosDB container.")),(0,r.kt)("p",null,"Its implementation waits fully until the stream has reached a steady state at a time T until it writes data to the container.\nThis means that its table output can always be traced back to a state from the source systems."),(0,r.kt)("p",null,"To use the ",(0,r.kt)("em",{parentName:"p"},"CosmosDB Sink")," add the following line to the ",(0,r.kt)("em",{parentName:"p"},"ReadWriteFactory"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'factory.AddCosmosDbSink("your regexp on table names", connectionString, databaseName, containerName);\n')),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("p",null,"Having a column named 'id' and also a column matching the configured primary key is required for the sink to function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'sqlBuilder.Sql(@"\n    INSERT into cosmos\n    SELECT userKey as id, companyId as pk, firstName, lastName \n    FROM users\n");\n\nfactory.AddCosmosDbSink("cosmos", connectionString, databaseName, containerName);\n\n...\n')))}u.isMDXComponent=!0}}]);