"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8573],{5691:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var s=n(5893),a=n(1151);const i={sidebar_position:3},r="Create View",o={id:"sql/createview",title:"Create View",description:"The create view command allows you to define a reusable sub-plan.",source:"@site/docs/sql/createview.md",sourceDirName:"sql",slug:"/sql/createview",permalink:"/flowtide/docs/sql/createview",draft:!1,unlisted:!1,editUrl:"https://github.com/koralium/flowtide/tree/main/docs/docs/sql/createview.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Create Table",permalink:"/flowtide/docs/sql/createtable"},next:{title:"Select",permalink:"/flowtide/docs/sql/select/"}},c={},l=[];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"create-view",children:"Create View"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.em,{children:"create view"})," command allows you to define a reusable sub-plan.\nWhen the SQL is converted into substrait, the view plan is added as a relation, and any usage of the view results in a ",(0,s.jsx)(t.a,{href:"https://substrait.io/relations/logical_relations/#reference-operator",children:"Reference Relation"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"If the same data should be accessable in multiple parts in a stream, creating a view is helpful to reduce having to redo the computation."}),"\n",(0,s.jsx)(t.p,{children:"Example:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sql",children:"CREATE VIEW testview AS\nSELECT c1 + 1 as column FROM testtable;\n\nINSERT INTO outputtable\nSELECT column FROM testview;\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>r});var s=n(7294);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);