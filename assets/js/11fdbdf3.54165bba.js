"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[2396],{5291:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"expressions/windowfunctions/generic","title":"Generic Functions","description":"Surrogate Key Int64","source":"@site/docs/expressions/windowfunctions/generic.md","sourceDirName":"expressions/windowfunctions","slug":"/expressions/windowfunctions/generic","permalink":"/flowtide/docs/expressions/windowfunctions/generic","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/expressions/windowfunctions/generic.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Arithmetic Functions","permalink":"/flowtide/docs/expressions/windowfunctions/arithmetic"},"next":{"title":"Specialized Expressions","permalink":"/flowtide/docs/expressions/specializedexpressions"}}');var s=i(4848),o=i(8453);const r={sidebar_position:2},c="Generic Functions",a={},d=[{value:"Surrogate Key Int64",id:"surrogate-key-int64",level:2},{value:"SQL Usage",id:"sql-usage",level:3}];function u(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"generic-functions",children:"Generic Functions"})}),"\n",(0,s.jsx)(n.h2,{id:"surrogate-key-int64",children:"Surrogate Key Int64"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"This function does not have a substrait definition."})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"This function is experimental and may be subject to change."})}),"\n",(0,s.jsx)(n.p,{children:'Generates a unique int64 value for each combination of the "partition by" columns in an window function query.\nThis can be used for instance when creating a SCD table where the partition by can be on both the primary key and date.'}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"This is non-deterministic across replays of a full rerun of a stream."})}),"\n",(0,s.jsx)(n.h3,{id:"sql-usage",children:"SQL Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"SELECT\n    surrogate_key_int64() OVER (PARTITION BY id, insertDate) as SK_MyKey,\n    id,\n    insertDate\nFROM testtable\n"})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var t=i(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);