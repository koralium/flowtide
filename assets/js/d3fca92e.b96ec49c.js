"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[4312],{5703:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>a,frontMatter:()=>d,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"monitoring/healthchecks","title":"Health checks","description":"In the \'FlowtideDotnet.AspNetCore\' package, there is built in support for \'Microsoft.Extensions.Diagnostics.HealthChecks\'.","source":"@site/docs/monitoring/healthchecks.md","sourceDirName":"monitoring","slug":"/monitoring/healthchecks","permalink":"/flowtide/docs/monitoring/healthchecks","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/monitoring/healthchecks.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"General Metrics","permalink":"/flowtide/docs/monitoring/generalmetrics"},"next":{"title":"Prometheus","permalink":"/flowtide/docs/monitoring/prometheus"}}');var r=s(4848),i=s(8453);const d={sidebar_position:1},o="Health checks",c={},h=[{value:"Statuses",id:"statuses",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"health-checks",children:"Health checks"})}),"\n",(0,r.jsx)(t.p,{children:"In the 'FlowtideDotnet.AspNetCore' package, there is built in support for 'Microsoft.Extensions.Diagnostics.HealthChecks'.\nIf you have added your stream using:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"builder.Services.AddFlowtideStream(...)\n"})}),"\n",(0,r.jsx)(t.p,{children:"You can add health checks with the following command:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"builder.Services\n    .AddHealthChecks()\n    .AddFlowtideCheck();\n"})}),"\n",(0,r.jsx)(t.h2,{id:"statuses",children:"Statuses"}),"\n",(0,r.jsx)(t.p,{children:"This section describes how the different stream statuses maps to the health check status:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Stream Status"}),(0,r.jsx)(t.th,{children:"Health check status"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Failing"}),(0,r.jsx)(t.td,{children:"Unhealthy"}),(0,r.jsx)(t.td,{children:"Stream has crashed"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Running"}),(0,r.jsx)(t.td,{children:"Running"}),(0,r.jsx)(t.td,{children:"Operational"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Starting"}),(0,r.jsx)(t.td,{children:"Degraded"}),(0,r.jsx)(t.td,{children:"Starting is only reported when going from stopped -> running"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Stopped"}),(0,r.jsx)(t.td,{children:"Unhealthy"}),(0,r.jsx)(t.td,{children:"If a stream should be stopped, remove it from health check"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Degraded"}),(0,r.jsx)(t.td,{children:"Degraded"}),(0,r.jsx)(t.td,{children:"Reported if a operator is degraded, such as slow performance"})]})]})]})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>o});var n=s(6540);const r={},i=n.createContext(r);function d(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);