"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9646],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var o=r.createContext({}),u=function(t){var e=r.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=u(t.components);return r.createElement(o.Provider,{value:e},t.children)},c="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},g=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,o=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),c=u(n),g=a,m=c["".concat(o,".").concat(g)]||c[g]||d[g]||l;return n?r.createElement(m,i(i({ref:e},p),{},{components:n})):r.createElement(m,i({ref:e},p))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,i=new Array(l);i[0]=g;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=t,s[c]="string"==typeof t?t:a,i[1]=s;for(var u=2;u<l;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},3762:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:4},i="String Functions",s={unversionedId:"expressions/scalarfunctions/string",id:"expressions/scalarfunctions/string",title:"String Functions",description:"Concat",source:"@site/docs/expressions/scalarfunctions/string.md",sourceDirName:"expressions/scalarfunctions",slug:"/expressions/scalarfunctions/string",permalink:"/flowtide/docs/expressions/scalarfunctions/string",draft:!1,editUrl:"https://github.com/koralium/flowtide/tree/main/docs/docs/expressions/scalarfunctions/string.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Comparison Functions",permalink:"/flowtide/docs/expressions/scalarfunctions/comparison"},next:{title:"Rounding Functions",permalink:"/flowtide/docs/expressions/scalarfunctions/rounding"}},o={},u=[{value:"Concat",id:"concat",level:2},{value:"SQL Usage",id:"sql-usage",level:3},{value:"Lower",id:"lower",level:2},{value:"SQL Usage",id:"sql-usage-1",level:3},{value:"Upper",id:"upper",level:2},{value:"SQL Usage",id:"sql-usage-2",level:3}],p={toc:u},c="wrapper";function d(t){let{components:e,...n}=t;return(0,a.kt)(c,(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"string-functions"},"String Functions"),(0,a.kt)("h2",{id:"concat"},"Concat"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://substrait.io/extensions/functions_string/#concat"},"Substrait definition")),(0,a.kt)("p",null,"Concatinates two or more string values together."),(0,a.kt)("p",null,"This function tries and convert non string values into the string type, example:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Input"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Output"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"'hello'"),(0,a.kt)("td",{parentName:"tr",align:null},"String"),(0,a.kt)("td",{parentName:"tr",align:null},"'hello'")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"13"),(0,a.kt)("td",{parentName:"tr",align:null},"Int"),(0,a.kt)("td",{parentName:"tr",align:null},"'13'")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"13.4"),(0,a.kt)("td",{parentName:"tr",align:null},"Float"),(0,a.kt)("td",{parentName:"tr",align:null},"'13.4'")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"true"),(0,a.kt)("td",{parentName:"tr",align:null},"Bool"),(0,a.kt)("td",{parentName:"tr",align:null},"'true'")))),(0,a.kt)("p",null,"If any argument is null, the return value will always be null."),(0,a.kt)("h3",{id:"sql-usage"},"SQL Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT c1 || ' hello ' || c2 FROM ... \n")),(0,a.kt)("h2",{id:"lower"},"Lower"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://substrait.io/extensions/functions_string/#lower"},"Substrait definition")),(0,a.kt)("p",null,"Returns the input string in all lowercase characters. If any other type than string is entered, the function will return 'null'."),(0,a.kt)("h3",{id:"sql-usage-1"},"SQL Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT lower(c1) FROM ... \n")),(0,a.kt)("h2",{id:"upper"},"Upper"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://substrait.io/extensions/functions_string/#upper"},"Substrait definition")),(0,a.kt)("p",null,"Returns the input string in all uppercase characters. If any other type than string is entered, the function will return 'null'."),(0,a.kt)("h3",{id:"sql-usage-2"},"SQL Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT upper(c1) FROM ... \n")))}d.isMDXComponent=!0}}]);