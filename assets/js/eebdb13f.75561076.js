"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[1079],{991:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var n=s(4848),r=s(8453);const a={sidebar_position:4},i="Select",o={id:"sql/select/index",title:"Select",description:"The select statement allows a user to write the actual query that will fetch data from different connectors and transform it into a destination.",source:"@site/docs/sql/select/index.md",sourceDirName:"sql/select",slug:"/sql/select/",permalink:"/flowtide/docs/sql/select/",draft:!1,unlisted:!1,editUrl:"https://github.com/koralium/flowtide/tree/main/docs/docs/sql/select/index.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Create View",permalink:"/flowtide/docs/sql/createview"},next:{title:"Union",permalink:"/flowtide/docs/sql/select/union"}},c={},l=[{value:"Wildcards",id:"wildcards",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"select",children:"Select"})}),"\n",(0,n.jsx)(t.p,{children:"The select statement allows a user to write the actual query that will fetch data from different connectors and transform it into a destination."}),"\n",(0,n.jsx)(t.p,{children:"Below is how the select statement is written in ANTLR format:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"SELECT scalar_or_aggregate_expression (',' scalar_or_aggregate_expression)*\nFROM table_source\n((LEFT | INNER)? JOIN table_source ON scalar_expression)*\n(WHERE scalar_expression)?\n(GROUP BY scalar_expression)?\n(HAVING scalar_or_aggregate_expression)?\n"})}),"\n",(0,n.jsxs)(t.p,{children:["All fields which says expression, can take in expressions found under the ",(0,n.jsx)(t.a,{href:"/docs/category/expressions",children:"Expressions chapter"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"wildcards",children:"Wildcards"}),"\n",(0,n.jsx)(t.p,{children:"Wildcards can be used in SQL projections, as demonstrated in the example below:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-sql",children:"SELECT * FROM table1\n"})}),"\n",(0,n.jsx)(t.p,{children:"However, using wildcards is generally discouraged. They can lead to the inclusion of unnecessary columns and may result in errors if the structure of the source table changes."})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>o});var n=s(6540);const r={},a=n.createContext(r);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);