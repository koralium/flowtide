"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7254],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(r),h=a,m=d["".concat(s,".").concat(h)]||d[h]||u[h]||o;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},7444:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:1},l="Health checks",i={unversionedId:"Monitoring/healthchecks",id:"Monitoring/healthchecks",title:"Health checks",description:"In the 'TideflowDotnet.AspNetCore' package, there is built in support for 'Microsoft.Extensions.Diagnostics.HealthChecks'.",source:"@site/docs/Monitoring/healthchecks.md",sourceDirName:"Monitoring",slug:"/Monitoring/healthchecks",permalink:"/flowtide/docs/Monitoring/healthchecks",draft:!1,editUrl:"https://github.com/koralium/flowtide/tree/main/docs/docs/Monitoring/healthchecks.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Monitoring",permalink:"/flowtide/docs/category/monitoring"},next:{title:"Operators",permalink:"/flowtide/docs/category/operators"}},s={},c=[{value:"Statuses",id:"statuses",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"health-checks"},"Health checks"),(0,a.kt)("p",null,"In the 'TideflowDotnet.AspNetCore' package, there is built in support for 'Microsoft.Extensions.Diagnostics.HealthChecks'.\nIf you have added your stream using:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"builder.Services.AddFlowtideStream(...)\n")),(0,a.kt)("p",null,"You can add health checks with the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"builder.Services\n    .AddHealthChecks()\n    .AddFlowtideCheck();\n")),(0,a.kt)("h2",{id:"statuses"},"Statuses"),(0,a.kt)("p",null,"This section describes how the different stream statuses maps to the health check status:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Stream Status"),(0,a.kt)("th",{parentName:"tr",align:null},"Health check status"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Failing"),(0,a.kt)("td",{parentName:"tr",align:null},"Unhealthy"),(0,a.kt)("td",{parentName:"tr",align:null},"Stream has crashed")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Running"),(0,a.kt)("td",{parentName:"tr",align:null},"Running"),(0,a.kt)("td",{parentName:"tr",align:null},"Operational")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Starting"),(0,a.kt)("td",{parentName:"tr",align:null},"Degraded"),(0,a.kt)("td",{parentName:"tr",align:null},"Starting is only reported when going from stopped -> running")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Stopped"),(0,a.kt)("td",{parentName:"tr",align:null},"Unhealthy"),(0,a.kt)("td",{parentName:"tr",align:null},"If a stream should be stopped, remove it from health check")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Degraded"),(0,a.kt)("td",{parentName:"tr",align:null},"Degraded"),(0,a.kt)("td",{parentName:"tr",align:null},"Reported if a operator is degraded, such as slow performance")))))}u.isMDXComponent=!0}}]);