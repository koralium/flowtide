"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[4952],{451:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"expressions/scalarfunctions/boolean","title":"Boolean Functions","description":"Or","source":"@site/docs/expressions/scalarfunctions/boolean.md","sourceDirName":"expressions/scalarfunctions","slug":"/expressions/scalarfunctions/boolean","permalink":"/flowtide/docs/expressions/scalarfunctions/boolean","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/expressions/scalarfunctions/boolean.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Arithmetic Functions","permalink":"/flowtide/docs/expressions/scalarfunctions/arithmetic"},"next":{"title":"Comparison Functions","permalink":"/flowtide/docs/expressions/scalarfunctions/comparison"}}');var o=s(4848),i=s(8453);const t={sidebar_position:2},r="Boolean Functions",a={},c=[{value:"Or",id:"or",level:2},{value:"SQL Usage",id:"sql-usage",level:3},{value:"And",id:"and",level:2},{value:"SQL Usage",id:"sql-usage-1",level:3},{value:"Not",id:"not",level:2},{value:"SQL Usage",id:"sql-usage-2",level:3},{value:"Xor",id:"xor",level:2},{value:"SQL Usage",id:"sql-usage-3",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"boolean-functions",children:"Boolean Functions"})}),"\n",(0,o.jsx)(n.h2,{id:"or",children:"Or"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://substrait.io/extensions/functions_boolean/#or",children:"Substrait definition"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.em,{children:"Or"})," implements the boolean logic ",(0,o.jsx)(n.em,{children:"Or"})," operator. Its return value will always be a boolean.\nAn argument into the ",(0,o.jsx)(n.em,{children:"Or"})," function that is not a boolean will be the same as the boolean value false."]}),"\n",(0,o.jsx)(n.p,{children:"Implements Kleene logic with the following truth table:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"+------+-------+-----+-----+-----+\n|              |     **B**       |\n+  **A OR B**  +-----+-----+-----+\n|              |**F**|**N**|**T**|\n+------+-------+-----+-----+-----+\n|      | **F** |  F  |  N  |  T  |\n+      +-------+-----+-----+-----+\n|**A** | **N** |  N  |  N  |  T  |\n+      +-------+-----+-----+-----+\n|      | **T** |  T  |  T  |  T  |\n+------+-------+-----+-----+-----+\n"})}),"\n",(0,o.jsx)(n.p,{children:"F = False, T = True, N = Null"}),"\n",(0,o.jsx)(n.h3,{id:"sql-usage",children:"SQL Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:"... WHERE c1 = 'hello' OR c2 = 'world'\n"})}),"\n",(0,o.jsx)(n.h2,{id:"and",children:"And"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://substrait.io/extensions/functions_boolean/#and",children:"Substrait definition"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.em,{children:"And"})," implements the boolean logic ",(0,o.jsx)(n.em,{children:"And"})," operator. Its return value will always be a boolean.\nAn argument into the ",(0,o.jsx)(n.em,{children:"And"})," function that is not a boolean will be the same as the boolean value false."]}),"\n",(0,o.jsx)(n.p,{children:"Implements Kleene logic with the following truth table:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"+------+-------+-----+-----+-----+\n|              |     **B**       |\n+  **A AND B** +-----+-----+-----+\n|              |**F**|**N**|**T**|\n+------+-------+-----+-----+-----+\n|      | **F** |  F  |  F  |  F  |\n+      +-------+-----+-----+-----+\n|**A** | **N** |  F  |  N  |  N  |\n+      +-------+-----+-----+-----+\n|      | **T** |  F  |  N  |  T  |\n+------+-------+-----+-----+-----+\n"})}),"\n",(0,o.jsx)(n.p,{children:"F = False, T = True, N = Null"}),"\n",(0,o.jsx)(n.h3,{id:"sql-usage-1",children:"SQL Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:"... WHERE c1 = 'hello' AND c2 = 'world'\n"})}),"\n",(0,o.jsx)(n.h2,{id:"not",children:"Not"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://substrait.io/extensions/functions_boolean/#not",children:"Substrait definition"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.em,{children:"not"})," of a boolean value. When a null is input, a null is output."]}),"\n",(0,o.jsx)(n.h3,{id:"sql-usage-2",children:"SQL Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:"... WHERE NOT c1 = 'hello'\n"})}),"\n",(0,o.jsx)(n.h2,{id:"xor",children:"Xor"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://substrait.io/extensions/functions_boolean/#xor",children:"Substrait definition"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.em,{children:"Xor"})," implements the boolean logic ",(0,o.jsx)(n.em,{children:"Xor"})," operator using kleene logic."]}),"\n",(0,o.jsx)(n.h3,{id:"sql-usage-3",children:"SQL Usage"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sql",children:"... WHERE (c1 = 'hello') XOR (c2 = 'world')\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>r});var l=s(6540);const o={},i=l.createContext(o);function t(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);