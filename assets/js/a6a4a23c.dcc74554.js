"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5208],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=l(n),f=i,d=p["".concat(u,".").concat(f)]||p[f]||m[f]||s;return n?r.createElement(d,a(a({ref:t},c),{},{components:n})):r.createElement(d,a({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,a=new Array(s);a[0]=f;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[p]="string"==typeof e?e:i,a[1]=o;for(var l=2;l<s;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9682:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const s={sidebar_position:2},a="Arithmetic Functions",o={unversionedId:"expressions/aggregatefunctions/arithmetic",id:"expressions/aggregatefunctions/arithmetic",title:"Arithmetic Functions",description:"Sum",source:"@site/docs/expressions/aggregatefunctions/arithmetic.md",sourceDirName:"expressions/aggregatefunctions",slug:"/expressions/aggregatefunctions/arithmetic",permalink:"/flowtide/docs/expressions/aggregatefunctions/arithmetic",draft:!1,editUrl:"https://github.com/koralium/flowtide/tree/main/docs/docs/expressions/aggregatefunctions/arithmetic.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Generic Functions",permalink:"/flowtide/docs/expressions/aggregatefunctions/generic"},next:{title:"Specialized Expressions",permalink:"/flowtide/docs/expressions/specializedexpressions"}},u={},l=[{value:"Sum",id:"sum",level:2},{value:"SQL Usage",id:"sql-usage",level:3},{value:"Sum0",id:"sum0",level:2},{value:"SQL Usage",id:"sql-usage-1",level:3},{value:"Min",id:"min",level:2},{value:"SQL Usage",id:"sql-usage-2",level:3}],c={toc:l},p="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"arithmetic-functions"},"Arithmetic Functions"),(0,i.kt)("h2",{id:"sum"},"Sum"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://substrait.io/extensions/functions_arithmetic/#sum"},"Substrait definition")),(0,i.kt)("p",null,"Calculates the sum of numeric values, if there are no rows a NULL value is returned.\nif a value is non numeric such as a string or null, those values are ignored."),(0,i.kt)("h3",{id:"sql-usage"},"SQL Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT sum(column1) FROM ...\n")),(0,i.kt)("h2",{id:"sum0"},"Sum0"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://substrait.io/extensions/functions_arithmetic/#sum0"},"Substrait definition")),(0,i.kt)("p",null,"Calculates the sum of numeric values, if there are no rows a 0 value is returned.\nif a value is non numeric such as a string or null, those values are ignored."),(0,i.kt)("h3",{id:"sql-usage-1"},"SQL Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT sum0(column1) FROM ...\n")),(0,i.kt)("h2",{id:"min"},"Min"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://substrait.io/extensions/functions_arithmetic/#min"},"Substrait definition")),(0,i.kt)("p",null,"Returns the minimum value in the result. If there are no rows a NULL value is returned.\nMIN ignores any null input values."),(0,i.kt)("h3",{id:"sql-usage-2"},"SQL Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT min(column1) FROM ...\n")))}m.isMDXComponent=!0}}]);