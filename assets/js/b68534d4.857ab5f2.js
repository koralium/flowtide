"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[9455],{8635:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"connectors/sharepoint","title":"Sharepoint Connector","description":"The Sharepoint Connector at this time only supports a sink where data can be stored into a sharepoint list.","source":"@site/docs/connectors/sharepoint.md","sourceDirName":"connectors","slug":"/connectors/sharepoint","permalink":"/flowtide/docs/connectors/sharepoint","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/connectors/sharepoint.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Custom Data Source","permalink":"/flowtide/docs/connectors/customdata"},"next":{"title":"OpenFGA Connector","permalink":"/flowtide/docs/connectors/openfga"}}');var i=t(4848),o=t(8453);const r={sidebar_position:7},l="Sharepoint Connector",a={},c=[{value:"List Sink",id:"list-sink",level:2},{value:"Supported column types",id:"supported-column-types",level:3},{value:"Options",id:"options",level:3},{value:"List Source",id:"list-source",level:2},{value:"Special columns",id:"special-columns",level:3},{value:"Options",id:"options-1",level:3}];function h(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"sharepoint-connector",children:"Sharepoint Connector"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"Sharepoint Connector"})," at this time only supports a sink where data can be stored into a sharepoint list."]}),"\n",(0,i.jsx)(n.p,{children:"To use it, add the following nuget:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"FlowtideDotNet.Connector.Sharepoint"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"list-sink",children:"List Sink"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"List Sink"})," saves result from a stream into a sharepoint list."]}),"\n",(0,i.jsxs)(n.p,{children:["To use it, add it to the ",(0,i.jsx)(n.em,{children:"ConnectorManager"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'connectorManager.AddSharepointListSink("{regexPattern}", (writeRelation) => new SharepointSinkOptions()\n{\n    // Set the primary key in sharepoint, it is the name of the column in sharepoint\n    PrimaryKeyColumnNames = new List<string> { "primaryKeyColumnName" }\n    SharepointUrl = "{your company name}.sharepoint.com",\n    Site = "{Name of sharepoint site}"\n    TokenCredential = yourAzureTokenCredential\n})\n'})}),"\n",(0,i.jsx)(n.h3,{id:"supported-column-types",children:"Supported column types"}),"\n",(0,i.jsx)(n.p,{children:"The following column types are supported:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Text"})," - Data in should be of data type string"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PersonOrGroup"})," - Data in should be of type string and contain a UPN such as email."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Boolean"})," - Data type should be a boolean (true/false)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DateTime"})," - Data in should be a unix timestamp."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Multi line"})," - Same as text."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Choice"})," - Data in should be of data type string and contain one of the choices."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Number"})," - Data in should be an integer or a float."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Currency"})," - Data in should be an integer or a float."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.p,{children:"The following options can be set on the sink:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PrimaryKeyColumnNames"})," - Required, a list of sharepoint column names that make up the primary key."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SharepointUrl"})," - Required, url to the sharepoint tenant, should not contain 'https://'."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Site"})," - Required, name to the site where the list is."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TokenCredential"})," - Required, the token credential that is used to authenticate against sharepoint."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"DisableDelete"})," - Disables row deletion."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ThrowOnPersonOrGroupNotFound"})," - Instead of returning null when a person is not found, throw an exception."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PreprocessRow"})," - Action that is called on each upsert, allows addition of metadata columns."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"list-source",children:"List Source"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"List Source"})," allow a stream to read data and changes from a sharepoint list."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.em,{children:"List Source"})," is added to the ",(0,i.jsx)(n.em,{children:"ConnectorManager"})," as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'connectorManager.AddSharepointSource(new SharepointSourceOptions()\n{\n    SharepointUrl = "{your company name}.sharepoint.com",\n    Site = "{Name of sharepoint site}",\n    TokenCredential = yourAzureTokenCredential\n}, "{optional prefix}");\n'})}),"\n",(0,i.jsx)(n.p,{children:"The following column types are supported:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Text"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Lookup"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"PersonOrGroup"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Boolean"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"DateTime"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"More types will be added in the future. Please create a github issue for the type you are missing."}),"\n",(0,i.jsx)(n.h3,{id:"special-columns",children:"Special columns"}),"\n",(0,i.jsx)(n.p,{children:"There are some special column names that allows you to fetch data:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ID"})," - The sharepoint row identifier."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"_fields"})," - Contains all columns in a map. Useful if one wants the stream to dynamically handle the addition of new columns"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The data in the ",(0,i.jsx)(n.em,{children:"_fields"})," column has the following structure:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "{columnName1}": {\n    "value": "{columnValue}",\n    "description": "{column description}",\n    "type": "{columnType}"\n  },\n  "{columnName2}": {\n    ...\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"options-1",children:"Options"}),"\n",(0,i.jsx)(n.p,{children:"The following options can be set on the source:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SharepointUrl"})," - Required, url to the sharepoint tenant, should not contain 'https://'."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Site"})," - Required, name to the site where the list is."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TokenCredential"})," - Required, the token credential that is used to authenticate against sharepoint."]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);