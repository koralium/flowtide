"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[1079],{219:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"sql/select/index","title":"Select","description":"The select statement allows a user to write the actual query that will fetch data from different connectors and transform it into a destination.","source":"@site/docs/sql/select/index.md","sourceDirName":"sql/select","slug":"/sql/select/","permalink":"/flowtide/docs/sql/select/","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/sql/select/index.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Create View","permalink":"/flowtide/docs/sql/createview"},"next":{"title":"Union","permalink":"/flowtide/docs/sql/select/union"}}');var r=t(4848),a=t(8453);const i={sidebar_position:4},o="Select",l={},c=[{value:"Wildcards",id:"wildcards",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"select",children:"Select"})}),"\n",(0,r.jsx)(s.p,{children:"The select statement allows a user to write the actual query that will fetch data from different connectors and transform it into a destination."}),"\n",(0,r.jsx)(s.p,{children:"Below is how the select statement is written in ANTLR format:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"SELECT scalar_or_aggregate_expression (',' scalar_or_aggregate_expression)*\nFROM table_source\n((LEFT | INNER)? JOIN table_source ON scalar_expression)*\n(WHERE scalar_expression)?\n(GROUP BY scalar_expression)?\n(HAVING scalar_or_aggregate_expression)?\n"})}),"\n",(0,r.jsxs)(s.p,{children:["All fields which says expression, can take in expressions found under the ",(0,r.jsx)(s.a,{href:"/docs/category/expressions",children:"Expressions chapter"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"wildcards",children:"Wildcards"}),"\n",(0,r.jsx)(s.p,{children:"Wildcards can be used in SQL projections, as demonstrated in the example below:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"SELECT * FROM table1\n"})}),"\n",(0,r.jsx)(s.p,{children:"However, using wildcards is generally discouraged. They can lead to the inclusion of unnecessary columns and may result in errors if the structure of the source table changes."})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>o});var n=t(6540);const r={},a=n.createContext(r);function i(e){const s=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);