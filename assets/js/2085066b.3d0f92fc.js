"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[5534],{1772:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"sql/tableprovider","title":"Table Provider","description":"It is possible to add table providers to the SqlPlanBuilder. These providers are called each time the compiler finds the usage of a table.","source":"@site/docs/sql/tableprovider.md","sourceDirName":"sql","slug":"/sql/tableprovider","permalink":"/flowtide/docs/sql/tableprovider","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/sql/tableprovider.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"SQL","permalink":"/flowtide/docs/sql/"},"next":{"title":"Create Table","permalink":"/flowtide/docs/sql/createtable"}}');var n=t(4848),o=t(8453);const a={sidebar_position:1},l="Table Provider",s={},d=[{value:"Registering a table provider",id:"registering-a-table-provider",level:2}];function c(e){const r={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"table-provider",children:"Table Provider"})}),"\n",(0,n.jsxs)(r.p,{children:["It is possible to add table providers to the ",(0,n.jsx)(r.em,{children:"SqlPlanBuilder"}),". These providers are called each time the compiler finds the usage of a table.\nIt asks each provider if it contains information about that specific table."]}),"\n",(0,n.jsx)(r.p,{children:"A table provider is defined by the following interface:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",children:"public interface ITableProvider\n{\n    bool TryGetTableInformation(string tableName, [NotNullWhen(true)] out TableMetadata? tableMetadata);\n}\n"})}),"\n",(0,n.jsx)(r.p,{children:"Creating a provider can be beneficial if you want to skip writing sql code to create table definitions for each used table."}),"\n",(0,n.jsx)(r.h2,{id:"registering-a-table-provider",children:"Registering a table provider"}),"\n",(0,n.jsxs)(r.p,{children:["You register a table provider on the ",(0,n.jsx)(r.em,{children:"SqlPlanBuilder"})," by calling the AddTableProvider method:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",children:"var sqlBuilder = new SqlPlanBuilder();\nsqlBuilder.AddTableProvider(new MyCustomProvider());\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Some connectors, such as ",(0,n.jsx)(r.em,{children:"SQL Server connector"})," might already come with a provider, a connector usually add an extension method to add its provider.\nExample on how ",(0,n.jsx)(r.em,{children:"SQL Server connector"})," provider is added:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",children:"sqlBuilder.AddSqlServerProvider(() => connectionString);\n"})})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>l});var i=t(6540);const n={},o=i.createContext(n);function a(e){const r=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),i.createElement(o.Provider,{value:r},e.children)}}}]);