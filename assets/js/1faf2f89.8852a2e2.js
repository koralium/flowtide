"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[9494],{1060:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"expressions/aggregatefunctions/generic","title":"Generic Functions","description":"Count","source":"@site/docs/expressions/aggregatefunctions/generic.md","sourceDirName":"expressions/aggregatefunctions","slug":"/expressions/aggregatefunctions/generic","permalink":"/flowtide/docs/expressions/aggregatefunctions/generic","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/expressions/aggregatefunctions/generic.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Aggregate Functions","permalink":"/flowtide/docs/category/aggregate-functions"},"next":{"title":"Arithmetic Functions","permalink":"/flowtide/docs/expressions/aggregatefunctions/arithmetic"}}');var i=t(4848),r=t(8453);const o={sidebar_position:1},a="Generic Functions",c={},u=[{value:"Count",id:"count",level:2},{value:"SQL Usage",id:"sql-usage",level:3},{value:"Surrogate Key Int64",id:"surrogate-key-int64",level:2},{value:"SQL Usage",id:"sql-usage-1",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"generic-functions",children:"Generic Functions"})}),"\n",(0,i.jsx)(n.h2,{id:"count",children:"Count"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://substrait.io/extensions/functions_aggregate_generic/#count_1",children:"Substrait definition"})}),"\n",(0,i.jsx)(n.p,{children:"Counts all rows in a query. This function takes no parameters, the implementation of count with a column name is not yet implemented."}),"\n",(0,i.jsx)(n.h3,{id:"sql-usage",children:"SQL Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT count(*) FROM ... \n"})}),"\n",(0,i.jsx)(n.h2,{id:"surrogate-key-int64",children:"Surrogate Key Int64"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"This function does not have a substrait definition."})}),"\n",(0,i.jsx)(n.p,{children:'Generates a unique int64 value for each combination of the "group by" columns in an aggregate query.\nThis can be used for instance when creating a SCD table where the group by can be on both the primary key and date.'}),"\n",(0,i.jsx)(n.h3,{id:"sql-usage-1",children:"SQL Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT\n    surrogate_key_int64() as SK_MyKey,\n    id,\n    insertDate\nFROM testtable\nGROUP BY id, insertDate\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var s=t(6540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);