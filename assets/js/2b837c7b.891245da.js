"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[3257],{8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var i=s(6540);const t={},l=i.createContext(t);function o(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(l.Provider,{value:n},e.children)}},9698:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"expressions/aggregatefunctions/list","title":"List Functions","description":"List Agg","source":"@site/docs/expressions/aggregatefunctions/list.md","sourceDirName":"expressions/aggregatefunctions","slug":"/expressions/aggregatefunctions/list","permalink":"/flowtide/docs/expressions/aggregatefunctions/list","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/expressions/aggregatefunctions/list.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Arithmetic Functions","permalink":"/flowtide/docs/expressions/aggregatefunctions/arithmetic"},"next":{"title":"String functions","permalink":"/flowtide/docs/expressions/aggregatefunctions/string"}}');var t=s(4848),l=s(8453);const o={sidebar_position:3},r="List Functions",a={},c=[{value:"List Agg",id:"list-agg",level:2},{value:"SQL Usage",id:"sql-usage",level:3},{value:"List Union Distinct Agg",id:"list-union-distinct-agg",level:2},{value:"SQL Usage",id:"sql-usage-1",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"list-functions",children:"List Functions"})}),"\n",(0,t.jsx)(n.h2,{id:"list-agg",children:"List Agg"}),"\n",(0,t.jsx)(n.p,{children:"This function does not have a substrait definition."}),"\n",(0,t.jsx)(n.p,{children:"List Agg creates a list of values per group. This is useful when denormalizing data.\nIt takes in one expression which will be the value added to the list for that row."}),"\n",(0,t.jsx)(n.h3,{id:"sql-usage",children:"SQL Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT key1, list_agg(value1) \nFROM table1\nGROUP BY key1\n"})}),"\n",(0,t.jsx)(n.p,{children:"Given the following two rows:"}),"\n",(0,t.jsx)(n.p,{children:"1, 'hello'\n1, 'world'"}),"\n",(0,t.jsx)(n.p,{children:"The output would be:"}),"\n",(0,t.jsx)(n.p,{children:"1, ['hello', 'world']"}),"\n",(0,t.jsx)(n.h2,{id:"list-union-distinct-agg",children:"List Union Distinct Agg"}),"\n",(0,t.jsx)(n.p,{children:"This function does not have a substrait definition."}),"\n",(0,t.jsx)(n.p,{children:"List Union Distinct Agg combines multiple lists and returns the distinct set of all lists.\nThis can be useful when having multiple rows with lists that need to be combined."}),"\n",(0,t.jsx)(n.h3,{id:"sql-usage-1",children:"SQL Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT key1, list_union_distinct_agg(value1) \nFROM table1\nGROUP BY key1\n"})}),"\n",(0,t.jsx)(n.p,{children:"Given the following two rows:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"1, ['hello', 'world']"}),"\n",(0,t.jsx)(n.li,{children:"1, ['world']"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The output would be:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"1, ['hello', 'world']"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);