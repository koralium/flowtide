"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[6889],{11:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"expressions/windowfunctions/arithmetic","title":"Arithmetic Functions","description":"Sum","source":"@site/docs/expressions/windowfunctions/arithmetic.md","sourceDirName":"expressions/windowfunctions","slug":"/expressions/windowfunctions/arithmetic","permalink":"/flowtide/docs/expressions/windowfunctions/arithmetic","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/expressions/windowfunctions/arithmetic.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Window Functions","permalink":"/flowtide/docs/expressions/windowfunctions/"},"next":{"title":"Specialized Expressions","permalink":"/flowtide/docs/expressions/specializedexpressions"}}');var t=s(4848),o=s(8453);const r={sidebar_position:1},c="Arithmetic Functions",l={},a=[{value:"Sum",id:"sum",level:2},{value:"SQL Usage",id:"sql-usage",level:3},{value:"Row number",id:"row-number",level:2},{value:"SQL Usage",id:"sql-usage-1",level:3},{value:"Lead",id:"lead",level:2},{value:"SQL Usage",id:"sql-usage-2",level:3}];function u(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"arithmetic-functions",children:"Arithmetic Functions"})}),"\n",(0,t.jsx)(n.h2,{id:"sum",children:"Sum"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://substrait.io/extensions/functions_arithmetic/#sum",children:"Substrait definition"})}),"\n",(0,t.jsxs)(n.p,{children:["Calculates the sum of numeric values within a window.",(0,t.jsx)(n.br,{}),"\n","If there are no rows in the window, the result is ",(0,t.jsx)(n.code,{children:"NULL"}),".",(0,t.jsx)(n.br,{}),"\n","Non-numeric values (such as strings or ",(0,t.jsx)(n.code,{children:"NULL"}),"s) are ignored during calculation."]}),"\n",(0,t.jsx)(n.h3,{id:"sql-usage",children:"SQL Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:" -- Total sum of all rows\nSELECT SUM(column1) OVER () FROM ...\n -- Total sum of each partition\nSELECT SUM(column1) OVER (PARTITION BY column2) FROM ...\n-- Sum from start to current row\nSELECT SUM(column1) OVER (PARTITION BY column2 ORDER BY column3) FROM ...\n-- Sum of the previous four rows and current row\nSELECT SUM(column1) OVER (PARTITION BY column2 ORDER BY column3 ROWS BETWEEN 4 PRECEDING AND CURRENT ROW) FROM ...\n"})}),"\n",(0,t.jsx)(n.h2,{id:"row-number",children:"Row number"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://substrait.io/extensions/functions_arithmetic/#row_number",children:"Substrait definition"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"ROW_NUMBER"})," window function assigns a unique, sequential number to each row within a partition of the result set. The numbering starts at 1 and is determined by the ",(0,t.jsx)(n.code,{children:"ORDER BY"})," clause."]}),"\n",(0,t.jsxs)(n.p,{children:["This function ",(0,t.jsxs)(n.strong,{children:["requires an ",(0,t.jsx)(n.code,{children:"ORDER BY"})," clause"]})," to determine row position and ",(0,t.jsx)(n.strong,{children:"does not support frame boundaries"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"sql-usage-1",children:"SQL Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT ROW_NUMBER(column1) OVER (PARTITION BY column2 ORDER BY column3) FROM ...\n"})}),"\n",(0,t.jsx)(n.h2,{id:"lead",children:"Lead"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://substrait.io/extensions/functions_arithmetic/#lead",children:"Substrait definition"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"LEAD"})," window function provides access to a subsequent row\u2019s value within the same result set partition. It returns the value of a specified column at a given offset after the current row."]}),"\n",(0,t.jsxs)(n.p,{children:["If no row exists at that offset, a default value (if provided) is returned; otherwise, the result is ",(0,t.jsx)(n.code,{children:"NULL"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["This function ",(0,t.jsxs)(n.strong,{children:["requires an ",(0,t.jsx)(n.code,{children:"ORDER BY"})," clause"]})," to establish row sequence and ",(0,t.jsx)(n.strong,{children:"does not support frame boundaries"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"sql-usage-2",children:"SQL Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- Lead with default offset 1 and null default\nSELECT LEAD(column1) OVER (PARTITION BY column2 ORDER BY column3) FROM ...\n-- Lead with offset 2 and null default\nSELECT LEAD(column1, 2) OVER (PARTITION BY column2 ORDER BY column3) FROM ...\n-- Lead with offset 2 and default value set to 'hello'\nSELECT LEAD(column1, 2, 'hello') OVER (PARTITION BY column2 ORDER BY column3) FROM ...\n"})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var i=s(6540);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);