"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[9755],{8453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>l});var n=s(6540);const r={},i=n.createContext(r);function c(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(i.Provider,{value:t},e.children)}},8602:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"sql/select/intersect","title":"Intersect","description":"Intersect All","source":"@site/docs/sql/select/intersect.md","sourceDirName":"sql/select","slug":"/sql/select/intersect","permalink":"/flowtide/docs/sql/select/intersect","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/sql/select/intersect.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Except","permalink":"/flowtide/docs/sql/select/except"},"next":{"title":"Insert Into","permalink":"/flowtide/docs/sql/insertinto"}}');var r=s(4848),i=s(8453);const c={sidebar_position:4},l="Intersect",o={},a=[{value:"Intersect All",id:"intersect-all",level:2},{value:"Intersect Distinct",id:"intersect-distinct",level:2}];function d(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"intersect",children:"Intersect"})}),"\n",(0,r.jsx)(t.h2,{id:"intersect-all",children:"Intersect All"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.em,{children:"INTERSECT ALL"})," operator returns rows that exist in all statements, this includes duplicates."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"select_stament1\nINTERSECT ALL\nselect_stament2\n"})}),"\n",(0,r.jsx)(t.h2,{id:"intersect-distinct",children:"Intersect Distinct"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.em,{children:"INTERSECT DISTINCT"})," operator returns rows that exist in all statements, this outputs distinct rows."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"select_stament\nINTERSECT DISTINCT\nselect_stament\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);