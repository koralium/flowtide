"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1725],{5834:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>i,metadata:()=>o,toc:()=>h});var s=n(5893),r=n(1151);const i={sidebar_position:1},d="Health checks",o={id:"monitoring/healthchecks",title:"Health checks",description:"In the 'TideflowDotnet.AspNetCore' package, there is built in support for 'Microsoft.Extensions.Diagnostics.HealthChecks'.",source:"@site/docs/monitoring/healthchecks.md",sourceDirName:"monitoring",slug:"/monitoring/healthchecks",permalink:"/flowtide/docs/monitoring/healthchecks",draft:!1,unlisted:!1,editUrl:"https://github.com/koralium/flowtide/tree/main/docs/docs/monitoring/healthchecks.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Monitoring",permalink:"/flowtide/docs/category/monitoring"},next:{title:"Prometheus",permalink:"/flowtide/docs/monitoring/prometheus"}},c={},h=[{value:"Statuses",id:"statuses",level:2}];function a(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"health-checks",children:"Health checks"}),"\n",(0,s.jsx)(t.p,{children:"In the 'TideflowDotnet.AspNetCore' package, there is built in support for 'Microsoft.Extensions.Diagnostics.HealthChecks'.\nIf you have added your stream using:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"builder.Services.AddFlowtideStream(...)\n"})}),"\n",(0,s.jsx)(t.p,{children:"You can add health checks with the following command:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"builder.Services\n    .AddHealthChecks()\n    .AddFlowtideCheck();\n"})}),"\n",(0,s.jsx)(t.h2,{id:"statuses",children:"Statuses"}),"\n",(0,s.jsx)(t.p,{children:"This section describes how the different stream statuses maps to the health check status:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Stream Status"}),(0,s.jsx)(t.th,{children:"Health check status"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Failing"}),(0,s.jsx)(t.td,{children:"Unhealthy"}),(0,s.jsx)(t.td,{children:"Stream has crashed"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Running"}),(0,s.jsx)(t.td,{children:"Running"}),(0,s.jsx)(t.td,{children:"Operational"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Starting"}),(0,s.jsx)(t.td,{children:"Degraded"}),(0,s.jsx)(t.td,{children:"Starting is only reported when going from stopped -> running"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Stopped"}),(0,s.jsx)(t.td,{children:"Unhealthy"}),(0,s.jsx)(t.td,{children:"If a stream should be stopped, remove it from health check"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Degraded"}),(0,s.jsx)(t.td,{children:"Degraded"}),(0,s.jsx)(t.td,{children:"Reported if a operator is degraded, such as slow performance"})]})]})]})]})}function l(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>d});var s=n(7294);const r={},i=s.createContext(r);function d(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);