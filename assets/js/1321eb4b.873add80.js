"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5618],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),m=o,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5272:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:3},i="Elasticsearch Connector",c={unversionedId:"connectors/elasticsearch",id:"connectors/elasticsearch",title:"Elasticsearch Connector",description:"The ElasticsSarch connector allows you to insert data into ElasticSearch.",source:"@site/docs/connectors/elasticsearch.md",sourceDirName:"connectors",slug:"/connectors/elasticsearch",permalink:"/flowtide/docs/connectors/elasticsearch",draft:!1,editUrl:"https://github.com/koralium/flowtide/tree/main/docs/docs/connectors/elasticsearch.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"CosmosDB Connector",permalink:"/flowtide/docs/connectors/cosmosdb"},next:{title:"Monitoring",permalink:"/flowtide/docs/category/monitoring"}},s={},l=[{value:"Sink",id:"sink",level:2},{value:"Example",id:"example",level:3}],p={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"elasticsearch-connector"},"Elasticsearch Connector"),(0,o.kt)("p",null,"The ElasticsSarch connector allows you to insert data into ElasticSearch.\nThere is only a sink operator implemented, and there is no plans yet to support a source."),(0,o.kt)("h2",{id:"sink"},"Sink"),(0,o.kt)("p",null,"The ElasticSearch sink allows insertion into an index."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"All ElasticSearch insertions must contain a column called '_id' this column is the unique identifier in the elasticsearch index.\nThis field will not be added to the source fields.")),(0,o.kt)("p",null,"To use the ",(0,o.kt)("em",{parentName:"p"},"ElasticSearch Sink")," add the following line to the ",(0,o.kt)("em",{parentName:"p"},"ReadWriteFactory"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'factory.AddElasticsearchSink("*", elasticSearchConnectionSettings);\n')),(0,o.kt)("p",null,"The table name in the write relation becomes the index the sink writes to."),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("p",null,"Having a column named '_id' is required for the sink to function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'sqlBuilder.Sql(@"\n    INSERT into elastic_index_name\n    SELECT userKey as _id, userKey, companyId, firstName, lastName \n    FROM users\n");\n\nfactory.AddElasticsearchSink("*", elasticSearchConnectionSettings);\n\n...\n')))}d.isMDXComponent=!0}}]);