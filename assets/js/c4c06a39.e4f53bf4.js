"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[364],{9638:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"operators/buffer","title":"Buffer Operator","description":"The buffer operator collects all events that happens in between watermarks and stores them in a temporary tree.","source":"@site/docs/operators/buffer.md","sourceDirName":"operators","slug":"/operators/buffer","permalink":"/flowtide/docs/operators/buffer","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/operators/buffer.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Iteration Operator","permalink":"/flowtide/docs/operators/iteration"},"next":{"title":"Top N Operator","permalink":"/flowtide/docs/operators/topn"}}');var o=r(4848),n=r(8453);const a={sidebar_position:7},i="Buffer Operator",d={},h=[{value:"Metrics",id:"metrics",level:2}];function c(e){const t={em:"em",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"buffer-operator",children:"Buffer Operator"})}),"\n",(0,o.jsx)(t.p,{children:"The buffer operator collects all events that happens in between watermarks and stores them in a temporary tree.\nThis is useful if a row is updated where no values are changed and you do not wish it to be propogated to the rest of the stream."}),"\n",(0,o.jsx)(t.p,{children:"The buffer operator has no properties."}),"\n",(0,o.jsx)(t.h2,{id:"metrics",children:"Metrics"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.em,{children:"Buffer Operator"})," has the following metrics:"]}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Metric Name"}),(0,o.jsx)(t.th,{children:"Type"}),(0,o.jsx)(t.th,{children:"Description"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"busy"}),(0,o.jsx)(t.td,{children:"Gauge"}),(0,o.jsx)(t.td,{children:"Value 0-1 on how busy the operator is."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"backpressure"}),(0,o.jsx)(t.td,{children:"Gauge"}),(0,o.jsx)(t.td,{children:"Value 0-1 on how much backpressure the operator has."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"health"}),(0,o.jsx)(t.td,{children:"Gauge"}),(0,o.jsx)(t.td,{children:"Value 0 or 1, if the operator is healthy or not."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"events"}),(0,o.jsx)(t.td,{children:"Counter"}),(0,o.jsx)(t.td,{children:"How many events that the operator outputs."})]})]})]})]})}function l(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>i});var s=r(6540);const o={},n=s.createContext(o);function a(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);