"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9646],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,g=c["".concat(o,".").concat(d)]||c[d]||m[d]||l;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<l;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3762:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:4},i="String Functions",s={unversionedId:"expressions/scalarfunctions/string",id:"expressions/scalarfunctions/string",title:"String Functions",description:"Concat",source:"@site/docs/expressions/scalarfunctions/string.md",sourceDirName:"expressions/scalarfunctions",slug:"/expressions/scalarfunctions/string",permalink:"/flowtide/docs/expressions/scalarfunctions/string",draft:!1,editUrl:"https://github.com/koralium/flowtide/tree/main/docs/docs/expressions/scalarfunctions/string.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Comparison Functions",permalink:"/flowtide/docs/expressions/scalarfunctions/comparison"},next:{title:"Rounding Functions",permalink:"/flowtide/docs/expressions/scalarfunctions/rounding"}},o={},u=[{value:"Concat",id:"concat",level:2},{value:"SQL Usage",id:"sql-usage",level:3},{value:"Lower",id:"lower",level:2},{value:"SQL Usage",id:"sql-usage-1",level:3},{value:"Upper",id:"upper",level:2},{value:"SQL Usage",id:"sql-usage-2",level:3},{value:"Trim",id:"trim",level:2},{value:"SQL Usage",id:"sql-usage-3",level:3},{value:"LTrim",id:"ltrim",level:2},{value:"SQL Usage",id:"sql-usage-4",level:3},{value:"RTrim",id:"rtrim",level:2},{value:"SQL Usage",id:"sql-usage-5",level:3}],p={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"string-functions"},"String Functions"),(0,a.kt)("h2",{id:"concat"},"Concat"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://substrait.io/extensions/functions_string/#concat"},"Substrait definition")),(0,a.kt)("p",null,"Concatinates two or more string values together."),(0,a.kt)("p",null,"This function tries and convert non string values into the string type, example:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Input"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Output"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"'hello'"),(0,a.kt)("td",{parentName:"tr",align:null},"String"),(0,a.kt)("td",{parentName:"tr",align:null},"'hello'")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"13"),(0,a.kt)("td",{parentName:"tr",align:null},"Int"),(0,a.kt)("td",{parentName:"tr",align:null},"'13'")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"13.4"),(0,a.kt)("td",{parentName:"tr",align:null},"Float"),(0,a.kt)("td",{parentName:"tr",align:null},"'13.4'")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"true"),(0,a.kt)("td",{parentName:"tr",align:null},"Bool"),(0,a.kt)("td",{parentName:"tr",align:null},"'true'")))),(0,a.kt)("p",null,"If any argument is null, the return value will always be null."),(0,a.kt)("h3",{id:"sql-usage"},"SQL Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT c1 || ' hello ' || c2 FROM ... \n")),(0,a.kt)("h2",{id:"lower"},"Lower"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://substrait.io/extensions/functions_string/#lower"},"Substrait definition")),(0,a.kt)("p",null,"Returns the input string in all lowercase characters. If any other type than string is entered, the function will return 'null'."),(0,a.kt)("h3",{id:"sql-usage-1"},"SQL Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT lower(c1) FROM ... \n")),(0,a.kt)("h2",{id:"upper"},"Upper"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://substrait.io/extensions/functions_string/#upper"},"Substrait definition")),(0,a.kt)("p",null,"Returns the input string in all uppercase characters. If any other type than string is entered, the function will return 'null'."),(0,a.kt)("h3",{id:"sql-usage-2"},"SQL Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT upper(c1) FROM ... \n")),(0,a.kt)("h2",{id:"trim"},"Trim"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://substrait.io/extensions/functions_string/#trim"},"Substrait definition")),(0,a.kt)("p",null,"Remove whitespaces from both sides of a string"),(0,a.kt)("h3",{id:"sql-usage-3"},"SQL Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT trim(c1) FROM ... \n")),(0,a.kt)("h2",{id:"ltrim"},"LTrim"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://substrait.io/extensions/functions_string/#ltrim"},"Substrait definition")),(0,a.kt)("p",null,"Remove whitespaces from the start of a string"),(0,a.kt)("h3",{id:"sql-usage-4"},"SQL Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT ltrim(c1) FROM ... \n")),(0,a.kt)("h2",{id:"rtrim"},"RTrim"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://substrait.io/extensions/functions_string/#rtrim"},"Substrait definition")),(0,a.kt)("p",null,"Remove whitespaces from the end of a string"),(0,a.kt)("h3",{id:"sql-usage-5"},"SQL Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT rtrim(c1) FROM ... \n")))}m.isMDXComponent=!0}}]);