"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[6853],{4286:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"expressions/scalarfunctions/list","title":"List Functions","description":"List Sort Ascending Null Last","source":"@site/docs/expressions/scalarfunctions/list.md","sourceDirName":"expressions/scalarfunctions","slug":"/expressions/scalarfunctions/list","permalink":"/flowtide/docs/expressions/scalarfunctions/list","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/expressions/scalarfunctions/list.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Check Functions","permalink":"/flowtide/docs/expressions/scalarfunctions/check"},"next":{"title":"Aggregate Functions","permalink":"/flowtide/docs/category/aggregate-functions"}}');var i=n(4848),r=n(8453);const o={sidebar_position:8},l="List Functions",a={},c=[{value:"List Sort Ascending Null Last",id:"list-sort-ascending-null-last",level:2},{value:"SQL Usage",id:"sql-usage",level:3}];function d(e){const s={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"list-functions",children:"List Functions"})}),"\n",(0,i.jsx)(s.h2,{id:"list-sort-ascending-null-last",children:"List Sort Ascending Null Last"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"This function has no substrait equivalent"})}),"\n",(0,i.jsx)(s.p,{children:"Sorts a list of values in ascending order, placing any null values at the end of the result."}),"\n",(0,i.jsx)(s.p,{children:"Values are ordered according to their natural ascending order (e.g., numerically or lexicographically).\nNulls are not compared to other values directly; they are always considered greater for the purpose of ordering.\nAny value that is not a list will return the result as null."}),"\n",(0,i.jsx)(s.h3,{id:"sql-usage",children:"SQL Usage"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT list_sort_asc_null_last(list(orderkey, userkey)) FROM ...\n"})})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var t=n(6540);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);