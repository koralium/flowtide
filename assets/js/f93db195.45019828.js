"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[3612],{8267:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"operators/set","title":"Set Operator","description":"The Set Operator can take in 2->N inputs and will perform a set operation on the inputs.","source":"@site/docs/operators/set.md","sourceDirName":"operators","slug":"/operators/set","permalink":"/flowtide/docs/operators/set","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/operators/set.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Normalization Operator","permalink":"/flowtide/docs/operators/normalization"},"next":{"title":"Aggregate Operator","permalink":"/flowtide/docs/operators/aggregate"}}');var s=r(4848),i=r(8453);const o={sidebar_position:5},l="Set Operator",a={},d=[{value:"Metrics",id:"metrics",level:2}];function h(e){const t={admonition:"admonition",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"set-operator",children:"Set Operator"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.em,{children:"Set Operator"})," can take in 2->N inputs and will perform a set operation on the inputs.\nIt is a stateful operator for all operations except ",(0,s.jsx)(t.em,{children:"UnionAll"}),", for the others one B+ tree is used to store\nthe weights from the different inputs."]}),"\n",(0,s.jsx)(t.p,{children:"The following operations are supported:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"UnionAll"}),"\n",(0,s.jsx)(t.li,{children:"UnionDistinct"}),"\n",(0,s.jsx)(t.li,{children:"MinusPrimary (EXCEPT DISTINCT)"}),"\n",(0,s.jsx)(t.li,{children:"MinusPrimaryAll (EXCEPT ALL)"}),"\n",(0,s.jsx)(t.li,{children:"IntersectionMultiset (INTERSECT DISTINCT)"}),"\n",(0,s.jsx)(t.li,{children:"IntersectionMultisetAll (INTERSECT ALL)"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"metrics",children:"Metrics"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.em,{children:"Set Operator"})," has the following metrics:"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Metric Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"busy"}),(0,s.jsx)(t.td,{children:"Gauge"}),(0,s.jsx)(t.td,{children:"Value 0-1 on how busy the operator is."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"backpressure"}),(0,s.jsx)(t.td,{children:"Gauge"}),(0,s.jsx)(t.td,{children:"Value 0-1 on how much backpressure the operator has."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"health"}),(0,s.jsx)(t.td,{children:"Gauge"}),(0,s.jsx)(t.td,{children:"Value 0 or 1, if the operator is healthy or not."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"events"}),(0,s.jsx)(t.td,{children:"Counter"}),(0,s.jsx)(t.td,{children:"How many events that the operator outputs."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"events_processed"}),(0,s.jsx)(t.td,{children:"Counter"}),(0,s.jsx)(t.td,{children:"How many events that the operator processes."})]})]})]}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.p,{children:"At this point, a set operator will never be unhealthy.\nIf there is a failure against the state, the stream will instead restart."})})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>l});var n=r(6540);const s={},i=n.createContext(s);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);