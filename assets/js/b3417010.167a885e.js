"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[6853],{1739:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"expressions/scalarfunctions/list","title":"List Functions","description":"List Sort Ascending Null Last","source":"@site/docs/expressions/scalarfunctions/list.md","sourceDirName":"expressions/scalarfunctions","slug":"/expressions/scalarfunctions/list","permalink":"/flowtide/docs/expressions/scalarfunctions/list","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/expressions/scalarfunctions/list.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Check Functions","permalink":"/flowtide/docs/expressions/scalarfunctions/check"},"next":{"title":"Hash Functions","permalink":"/flowtide/docs/expressions/scalarfunctions/hash"}}');var i=n(4848),r=n(8453);const l={sidebar_position:8},o="List Functions",a={},c=[{value:"List Sort Ascending Null Last",id:"list-sort-ascending-null-last",level:2},{value:"SQL Usage",id:"sql-usage",level:3},{value:"List First Difference",id:"list-first-difference",level:2},{value:"SQL Usage",id:"sql-usage-1",level:3}];function d(e){const s={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"list-functions",children:"List Functions"})}),"\n",(0,i.jsx)(s.h2,{id:"list-sort-ascending-null-last",children:"List Sort Ascending Null Last"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"This function has no substrait equivalent"})}),"\n",(0,i.jsx)(s.p,{children:"Sorts a list of values in ascending order, placing any null values at the end of the result."}),"\n",(0,i.jsx)(s.p,{children:"Values are ordered according to their natural ascending order (e.g., numerically or lexicographically).\nNulls are not compared to other values directly; they are always considered greater for the purpose of ordering.\nAny value that is not a list will return the result as null."}),"\n",(0,i.jsx)(s.h3,{id:"sql-usage",children:"SQL Usage"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT list_sort_asc_null_last(list(orderkey, userkey)) FROM ...\n"})}),"\n",(0,i.jsx)(s.h2,{id:"list-first-difference",children:"List First Difference"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"This function has no substrait equivalent"})}),"\n",(0,i.jsx)(s.p,{children:"Returns the first element from the first list where a difference is found when compared to the corresponding element in the second list. The comparison is done element-by-element, maintaining the order of the lists. If no difference is found (i.e., all elements in both lists are equal, or the first list is shorter than the second list), the function returns NULL."}),"\n",(0,i.jsx)(s.p,{children:"If one or both of the lists are NULL, the function handles them as follows:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"If the second list is NULL, the function returns the first element of the first list (if it exists)."}),"\n",(0,i.jsx)(s.li,{children:"If the first list is NULL, the function returns NULL."}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"sql-usage-1",children:"SQL Usage"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT list_first_difference(list1, list2) FROM ...\n"})})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>o});var t=n(6540);const i={},r=t.createContext(i);function l(e){const s=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);