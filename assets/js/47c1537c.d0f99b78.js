"use strict";(self.webpackChunkflowtide=self.webpackChunkflowtide||[]).push([[6214],{7651:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"operators/projection","title":"Projection Operator","description":"The Projection Operator implements the Project relation defined in substrait. The Projection operator is stateless and does not need to store any state.","source":"@site/docs/operators/projection.md","sourceDirName":"operators","slug":"/operators/projection","permalink":"/flowtide/docs/operators/projection","draft":false,"unlisted":false,"editUrl":"https://github.com/koralium/flowtide/tree/main/docs/docs/operators/projection.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Operators","permalink":"/flowtide/docs/category/operators"},"next":{"title":"Filter Operator","permalink":"/flowtide/docs/operators/filter"}}');var n=r(4848),s=r(8453);const i={sidebar_position:1},a="Projection Operator",d={},c=[{value:"Metrics",id:"metrics",level:2}];function h(e){const t={a:"a",admonition:"admonition",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"projection-operator",children:"Projection Operator"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.em,{children:"Projection Operator"})," implements the ",(0,n.jsx)(t.em,{children:"Project relation"})," defined in ",(0,n.jsx)(t.a,{href:"https://substrait.io/relations/logical_relations/#project-operation",children:"substrait"}),". The ",(0,n.jsx)(t.em,{children:"Projection operator"})," is stateless and does not need to store any state."]}),"\n",(0,n.jsxs)(t.p,{children:["As defined in substrait, it takes in two properties, ",(0,n.jsx)(t.em,{children:"input"})," which is the operator that feeds the projection, and an array of expressions which defines\nhow data should be projected. It also implements the common ",(0,n.jsx)(t.em,{children:"Emit"})," field which allows a user to reduce the amount of data outputted by the operator.\nAll expressions defined in the array will have an emit index offset by the input length."]}),"\n",(0,n.jsx)(t.h2,{id:"metrics",children:"Metrics"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.em,{children:"Projection Operator"})," has the following metrics:"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Metric Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"busy"}),(0,n.jsx)(t.td,{children:"Gauge"}),(0,n.jsx)(t.td,{children:"Value 0-1 on how busy the operator is."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"backpressure"}),(0,n.jsx)(t.td,{children:"Gauge"}),(0,n.jsx)(t.td,{children:"Value 0-1 on how much backpressure the operator has."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"health"}),(0,n.jsx)(t.td,{children:"Gauge"}),(0,n.jsx)(t.td,{children:"Value 0 or 1, if the operator is healthy or not."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"events"}),(0,n.jsx)(t.td,{children:"Counter"}),(0,n.jsx)(t.td,{children:"How many events that pass through the operator."})]})]})]}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsx)(t.p,{children:"At this point, a projection operator will never be unhealthy."})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>a});var o=r(6540);const n={},s=o.createContext(n);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);