"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Getting started","href":"/flowtide/docs/intro","docId":"intro"},{"type":"link","label":"State Persistence","href":"/flowtide/docs/statepersistence","docId":"statepersistence"},{"type":"category","label":"Connectors","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SQL Server Connector","href":"/flowtide/docs/Connectors/sqlserver","docId":"Connectors/sqlserver"}],"href":"/flowtide/docs/category/connectors"},{"type":"category","label":"Monitoring","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Health checks","href":"/flowtide/docs/Monitoring/healthchecks","docId":"Monitoring/healthchecks"},{"type":"link","label":"Prometheus","href":"/flowtide/docs/Monitoring/prometheus","docId":"Monitoring/prometheus"},{"type":"link","label":"Azure Monitor","href":"/flowtide/docs/Monitoring/azuremonitor","docId":"Monitoring/azuremonitor"}],"href":"/flowtide/docs/category/monitoring"},{"type":"category","label":"Operators","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Projection Operator","href":"/flowtide/docs/Operators/projection","docId":"Operators/projection"},{"type":"link","label":"Filter Operator","href":"/flowtide/docs/Operators/filter","docId":"Operators/filter"},{"type":"link","label":"Join Operators","href":"/flowtide/docs/Operators/join","docId":"Operators/join"},{"type":"link","label":"Normalization Operator","href":"/flowtide/docs/Operators/normalization","docId":"Operators/normalization"},{"type":"link","label":"Set Operator","href":"/flowtide/docs/Operators/set","docId":"Operators/set"},{"type":"link","label":"Aggregate Operator","href":"/flowtide/docs/Operators/aggregate","docId":"Operators/aggregate"}],"href":"/flowtide/docs/category/operators"}]},"docs":{"Connectors/sqlserver":{"id":"Connectors/sqlserver","title":"SQL Server Connector","description":"The SQL Server connector has three different parts:","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Getting started","description":"To get started with Flowtide, the easiest way is to create a new C# project.","sidebar":"tutorialSidebar"},"Monitoring/azuremonitor":{"id":"Monitoring/azuremonitor","title":"Azure Monitor","description":"This section describes how to export monitoring data to Azure Monitor. It will show both how to export metrics, and also health check data.","sidebar":"tutorialSidebar"},"Monitoring/healthchecks":{"id":"Monitoring/healthchecks","title":"Health checks","description":"In the \'TideflowDotnet.AspNetCore\' package, there is built in support for \'Microsoft.Extensions.Diagnostics.HealthChecks\'.","sidebar":"tutorialSidebar"},"Monitoring/prometheus":{"id":"Monitoring/prometheus","title":"Prometheus","description":"It is possible to export the stream metrics to Prometheus using OpenTelemetry.","sidebar":"tutorialSidebar"},"Operators/aggregate":{"id":"Operators/aggregate","title":"Aggregate Operator","description":"The Aggregate Operator implements the Substrait Aggregate Relation.","sidebar":"tutorialSidebar"},"Operators/filter":{"id":"Operators/filter","title":"Filter Operator","description":"The Filter Operator implements the Filter relation defined in substrait. The Filter operator is stateless and does not need to store any state.","sidebar":"tutorialSidebar"},"Operators/join":{"id":"Operators/join","title":"Join Operators","description":"Join in Flowtide is implemented with two different operators, a block-nested join operator, and a merge-join operator.","sidebar":"tutorialSidebar"},"Operators/normalization":{"id":"Operators/normalization","title":"Normalization Operator","description":"The Normalization Operator is used mostly as a helper operator for ingestion of data.","sidebar":"tutorialSidebar"},"Operators/projection":{"id":"Operators/projection","title":"Projection Operator","description":"The Projection Operator implements the Project relation defined in substrait. The Projection operator is stateless and does not need to store any state.","sidebar":"tutorialSidebar"},"Operators/set":{"id":"Operators/set","title":"Set Operator","description":"The Set Operator can take in 2->N inputs and will perform a set operation on the inputs. At this point only UNION ALL is supported by the set operator.","sidebar":"tutorialSidebar"},"statepersistence":{"id":"statepersistence","title":"State Persistence","description":"All tideflow streams require a persistent storage solution to function.","sidebar":"tutorialSidebar"}}}')}}]);