<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://koralium.github.io/flowtide/blog</id>
    <title>Flowtide Blog</title>
    <updated>2025-02-10T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://koralium.github.io/flowtide/blog"/>
    <subtitle>Flowtide Blog</subtitle>
    <icon>https://koralium.github.io/flowtide/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Release 0.13.0]]></title>
        <id>https://koralium.github.io/flowtide/blog/release-0-13-0</id>
        <link href="https://koralium.github.io/flowtide/blog/release-0-13-0"/>
        <updated>2025-02-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Major changes]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="major-changes">Major changes<a href="https://koralium.github.io/flowtide/blog/release-0-13-0#major-changes" class="hash-link" aria-label="Direct link to Major changes" title="Direct link to Major changes">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-serializer-to-improve-serialization-speed">New serializer to improve serialization speed<a href="https://koralium.github.io/flowtide/blog/release-0-13-0#new-serializer-to-improve-serialization-speed" class="hash-link" aria-label="Direct link to New serializer to improve serialization speed" title="Direct link to New serializer to improve serialization speed">​</a></h3>
<p>A new custom serializer has been implemented that follows the Apache Arrow serialization while minimizing extra allocations and memory copies.</p>
<p>Additionally, the default compression method was also changed from using ZLib to Zstd.
This change was also made to improve serialization performance.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="support-for-pause--resume">Support for pause &amp; resume<a href="https://koralium.github.io/flowtide/blog/release-0-13-0#support-for-pause--resume" class="hash-link" aria-label="Direct link to Support for pause &amp; resume" title="Direct link to Support for pause &amp; resume">​</a></h3>
<p>A new feature has been added to allow pausing and resuming data streams, making it easier to conduct maintenance or temporarily halt processing without losing state.</p>
<p>For more information, visit <a href="https://koralium.github.io/flowtide/docs/deployment/pauseresume" target="_blank" rel="noopener noreferrer">https://koralium.github.io/flowtide/docs/deployment/pauseresume</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="integer-column-changed-from-64-bits-to-dynamic-size">Integer column changed from 64 bits to dynamic size<a href="https://koralium.github.io/flowtide/blog/release-0-13-0#integer-column-changed-from-64-bits-to-dynamic-size" class="hash-link" aria-label="Direct link to Integer column changed from 64 bits to dynamic size" title="Direct link to Integer column changed from 64 bits to dynamic size">​</a></h3>
<p>The integer column was changed to now instead select the bit size based on the data inside of the column.
This change reduces memory usage for columns with smaller integer values. Bit size is determined on a per-page basis, so pages with larger values will only use higher bit sizes when necessary.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="delta-lake-support">Delta Lake Support<a href="https://koralium.github.io/flowtide/blog/release-0-13-0#delta-lake-support" class="hash-link" aria-label="Direct link to Delta Lake Support" title="Direct link to Delta Lake Support">​</a></h3>
<p>This version adds support to both read and write to the Delta Lake format. This allows easy integration
to data lake storage. To learn more about delta lake support, please visit: <a href="https://koralium.github.io/flowtide/docs/connectors/deltalake" target="_blank" rel="noopener noreferrer">https://koralium.github.io/flowtide/docs/connectors/deltalake</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="custom-data-source--sink-changed-to-use-column-based-events">Custom data source &amp; sink changed to use column based events<a href="https://koralium.github.io/flowtide/blog/release-0-13-0#custom-data-source--sink-changed-to-use-column-based-events" class="hash-link" aria-label="Direct link to Custom data source &amp; sink changed to use column based events" title="Direct link to Custom data source &amp; sink changed to use column based events">​</a></h3>
<p>Both the custom data source and sink have now been changed to use column based events.
This improves connector performance by eliminating the need to convert data between column-based and row-based formats during streaming.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="minor-changes">Minor changes<a href="https://koralium.github.io/flowtide/blog/release-0-13-0#minor-changes" class="hash-link" aria-label="Direct link to Minor changes" title="Direct link to Minor changes">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="elasticsearch-connector-change-from-nest-to-elasticclientselasticsearch">Elasticsearch connector change from Nest to Elastic.Clients.Elasticsearch<a href="https://koralium.github.io/flowtide/blog/release-0-13-0#elasticsearch-connector-change-from-nest-to-elasticclientselasticsearch" class="hash-link" aria-label="Direct link to Elasticsearch connector change from Nest to Elastic.Clients.Elasticsearch" title="Direct link to Elasticsearch connector change from Nest to Elastic.Clients.Elasticsearch">​</a></h3>
<p>The Elasticsearch connector has been updated from the deprecated <code>Nest</code> package to <code>Elastic.Clients.Elasticsearch</code>. This change requires stream configurations to be adjusted for the new connection settings.</p>
<p>Additionally, connection settings are now provided via a function, enabling dynamic credential management, such as rolling passwords.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="add-support-for-custom-stream-listeners">Add support for custom stream listeners<a href="https://koralium.github.io/flowtide/blog/release-0-13-0#add-support-for-custom-stream-listeners" class="hash-link" aria-label="Direct link to Add support for custom stream listeners" title="Direct link to Add support for custom stream listeners">​</a></h3>
<p>Applications can now listen to stream events like checkpoints, state changes, and failures, allowing for custom exit strategies or monitoring logic.</p>
<p>Example:</p>
<div class="language-csharp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-csharp codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">AddCustomOptions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    s</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithExitProcessOnFailure</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cache-lookup-table-for-state-clients">Cache lookup table for state clients<a href="https://koralium.github.io/flowtide/blog/release-0-13-0#cache-lookup-table-for-state-clients" class="hash-link" aria-label="Direct link to Cache lookup table for state clients" title="Direct link to Cache lookup table for state clients">​</a></h3>
<p>An internal optimization adds a small lookup table for state client page access, reducing contention on the global LRU cache. This change has shown a 10–12% performance improvement in benchmarks.</p>]]></content>
        <category label="release" term="release"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Release 0.12.0]]></title>
        <id>https://koralium.github.io/flowtide/blog/release-0-12-0</id>
        <link href="https://koralium.github.io/flowtide/blog/release-0-12-0"/>
        <updated>2025-01-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Major changes]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="major-changes">Major changes<a href="https://koralium.github.io/flowtide/blog/release-0-12-0#major-changes" class="hash-link" aria-label="Direct link to Major changes" title="Direct link to Major changes">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="all-processing-operators-updated-to-column-based-events">All Processing Operators Updated to Column-Based Events<a href="https://koralium.github.io/flowtide/blog/release-0-12-0#all-processing-operators-updated-to-column-based-events" class="hash-link" aria-label="Direct link to All Processing Operators Updated to Column-Based Events" title="Direct link to All Processing Operators Updated to Column-Based Events">​</a></h3>
<p>All processing operators now use the column-based event format, leading to better performance.
However, some sources and sinks for connectors still use the row-based event format.
Additionally, a few functions continue to rely on the row-based event format.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="mongodb-source-support">MongoDB Source Support<a href="https://koralium.github.io/flowtide/blog/release-0-12-0#mongodb-source-support" class="hash-link" aria-label="Direct link to MongoDB Source Support" title="Direct link to MongoDB Source Support">​</a></h3>
<p>This release adds support to read data from MongoDB, this includes using
MongoDBs change stream to directly react on data changes.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="sql-server-support-for-stream-state-persistence">SQL Server Support for Stream State Persistence<a href="https://koralium.github.io/flowtide/blog/release-0-12-0#sql-server-support-for-stream-state-persistence" class="hash-link" aria-label="Direct link to SQL Server Support for Stream State Persistence" title="Direct link to SQL Server Support for Stream State Persistence">​</a></h3>
<p>You can now store the stream state in SQL Server. For setup instructions, refer to the documentation:
<a href="https://koralium.github.io/flowtide/docs/statepersistence#sql-server-storage" target="_blank" rel="noopener noreferrer">https://koralium.github.io/flowtide/docs/statepersistence#sql-server-storage</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="timestamp-with-time-zone-data-type">Timestamp with Time Zone Data Type<a href="https://koralium.github.io/flowtide/blog/release-0-12-0#timestamp-with-time-zone-data-type" class="hash-link" aria-label="Direct link to Timestamp with Time Zone Data Type" title="Direct link to Timestamp with Time Zone Data Type">​</a></h3>
<p>A new data type for timestamps has been added.
This ensures that connectors can correctly use the appropriate data type, especially when writing.
For example, writing to MongoDB now uses the BSON Date type.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="minor-changes">Minor Changes<a href="https://koralium.github.io/flowtide/blog/release-0-12-0#minor-changes" class="hash-link" aria-label="Direct link to Minor Changes" title="Direct link to Minor Changes">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="virtual-table-support">Virtual Table Support<a href="https://koralium.github.io/flowtide/blog/release-0-12-0#virtual-table-support" class="hash-link" aria-label="Direct link to Virtual Table Support" title="Direct link to Virtual Table Support">​</a></h3>
<p>Static data selection is now supported. Example usage:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">INSERT INTO output </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SELECT * FROM </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">(</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  VALUES </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  (1, 'a'),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  (2, 'b'),</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  (3, 'c')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="release" term="release"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Release 0.11.0]]></title>
        <id>https://koralium.github.io/flowtide/blog/release-0-11-0</id>
        <link href="https://koralium.github.io/flowtide/blog/release-0-11-0"/>
        <updated>2024-11-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Major Changes]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="major-changes">Major Changes<a href="https://koralium.github.io/flowtide/blog/release-0-11-0#major-changes" class="hash-link" aria-label="Direct link to Major Changes" title="Direct link to Major Changes">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="column-based-event-format">Column-Based Event Format<a href="https://koralium.github.io/flowtide/blog/release-0-11-0#column-based-event-format" class="hash-link" aria-label="Direct link to Column-Based Event Format" title="Direct link to Column-Based Event Format">​</a></h3>
<p>Most operators have transitioned from treating events as rows with flexbuffer to a column-based format following the Apache Arrow specification. This change has led to significant performance improvements, especially in the merge join and aggregation operators. Transitioning from row-based to column-based events involved a major rewrite of core components, and some operators still use the row-based format, which will be updated in the future.</p>
<p>Not all expressions have been converted to work with column data yet. However, the solution currently handles conversions between formats to maintain backward compatibility. Frequent conversions may result in performance decreases.</p>
<p>The shift to a column format also introduced the use of unmanaged memory for new data structures, for the following reasons:</p>
<ul>
<li>64-byte aligned memory addresses for optimal SIMD/AVX operations.</li>
<li>Immediate memory return when a page is removed from the LRU cache, instead of waiting for the next garbage collection cycle.</li>
</ul>
<p>With unmanaged memory, it is now possible to track memory allocation by different operators, providing better insight into memory usage in your stream.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="b-tree-splitting-by-byte-size">B+ Tree Splitting by Byte Size<a href="https://koralium.github.io/flowtide/blog/release-0-11-0#b-tree-splitting-by-byte-size" class="hash-link" aria-label="Direct link to B+ Tree Splitting by Byte Size" title="Direct link to B+ Tree Splitting by Byte Size">​</a></h3>
<p>Previously, the B+ tree determined page sizes based on the number of elements, splitting pages into two equal parts when the max size (e.g., 128 elements) was reached. While this worked for streams with uniform element sizes, it led to size discrepancies in other cases, affecting serialization time and slowing down the stream.</p>
<p>This update introduces page splitting based on byte size, with a default page size of 32KB, ensuring more consistent and predictable page sizes.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="initial-sql-type-validation">Initial SQL Type Validation<a href="https://koralium.github.io/flowtide/blog/release-0-11-0#initial-sql-type-validation" class="hash-link" aria-label="Direct link to Initial SQL Type Validation" title="Direct link to Initial SQL Type Validation">​</a></h3>
<p>This release contains the beginning of type validation when creating a Substrait plan using SQL. Currently, only SQL Server provides specific type metadata, while sources like Kafka continue to designate columns as 'any' due to varying payload types.</p>
<p>The new validation feature raises exceptions for type mismatches, such as when a boolean column is compared to an integer (e.g., boolColumn = 1). This helps inform users transitioning from SQL Server that bit columns are treated as boolean in Flowtide.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="new-ui">New UI<a href="https://koralium.github.io/flowtide/blog/release-0-11-0#new-ui" class="hash-link" aria-label="Direct link to New UI" title="Direct link to New UI">​</a></h3>
<p><img decoding="async" loading="lazy" alt="new UI" src="https://koralium.github.io/flowtide/assets/images/flowtidenewui-4f30f642123b33f2a4131b39bb16d066.png" width="1528" height="926" class="img_ev3q"></p>
<p>A new UI has been developed, featuring an integrated time series database that enables developers to monitor stream behavior over time. This database’s API aligns with Prometheus standards, allowing for custom queries to investigate potential issues.</p>
<p>The UI retrieves all data through the Prometheus API endpoint, enabling future deployment as a standalone tool connected to a Prometheus server.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="minor-changes">Minor Changes<a href="https://koralium.github.io/flowtide/blog/release-0-11-0#minor-changes" class="hash-link" aria-label="Direct link to Minor Changes" title="Direct link to Minor Changes">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="congestion-control-based-on-cache-misses">Congestion Control Based on Cache Misses<a href="https://koralium.github.io/flowtide/blog/release-0-11-0#congestion-control-based-on-cache-misses" class="hash-link" aria-label="Direct link to Congestion Control Based on Cache Misses" title="Direct link to Congestion Control Based on Cache Misses">​</a></h3>
<p>Flowtide processes data in small batches, typically 1-100 events. While this approach works well with in-memory data, cache misses that require persistent storage access can create bottlenecks. This is particularly problematic with multiple chained joins, where sequential data fetching can delay processing.</p>
<p>To address this, the join operator now monitors cache misses during a batch and, when a threshold is reached, splits the processed events and forwards them to the next operator. This change allows operators to access persistent storage in parallel, easing congestion.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="reduce-the-amount-of-pages-written-to-persistent-storage">Reduce the amount of pages written to persistent storage<a href="https://koralium.github.io/flowtide/blog/release-0-11-0#reduce-the-amount-of-pages-written-to-persistent-storage" class="hash-link" aria-label="Direct link to Reduce the amount of pages written to persistent storage" title="Direct link to Reduce the amount of pages written to persistent storage">​</a></h3>
<p>Previously, all B+ tree metadata was written to persistent storage at every checkpoint, including root page IDs. In streams with numerous operators, this led to unnecessary writes.</p>
<p>Now, metadata is only written if changes have occurred, reducing the number of writes and improving storage efficiency.</p>]]></content>
        <category label="release" term="release"/>
    </entry>
</feed>