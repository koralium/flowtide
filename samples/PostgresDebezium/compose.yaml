services:
  stream:
    depends_on:
      connect.configurator:
        condition: service_completed_successfully
    build: 
      context: ../../
      dockerfile: samples/PostgresDebezium/Dockerfile
    environment:
      bootstrapServers: "kafka:9092"
    ports:
      - "8000:80"
  zookeeper:
    image: quay.io/debezium/zookeeper:2.1
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
  kafka:
    restart: always
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
  postgres:
    image: quay.io/debezium/example-postgres:2.1
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h postgres -p 5432"]
      interval: 10s
      start_period: 10s
      timeout: 5s
      retries: 5
    ports:
     - 5432:5432
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
  connect:
    image: quay.io/debezium/connect:2.1
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083"]
      interval: 10s
      start_period: 10s
      timeout: 5s
      retries: 5
    ports:
     - 8083:8083
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
  connect.configurator:
    image: quay.io/debezium/connect:2.1
    volumes:
      - ./:/bootstrap
    depends_on:
      connect:
        condition: service_healthy
    command: "bash -c 'curl -X POST -H \"Content-Type: application/json\" --data @/bootstrap/register-postgres.json http://connect:8083/connectors'"
  postgres.configurator:
    image: quay.io/debezium/example-postgres:2.1
    volumes:
      - ./:/bootstrap
    depends_on:
      postgres:
        condition: service_healthy
    command: "bash -c 'psql -h postgres -p 5432 -U postgres -f /bootstrap/bootstrap.sql postgres'"
    environment:
     - PGPASSWORD=postgres