services:
  stream:
    depends_on:
      sqlserver.configurator:
        condition: service_completed_successfully
      elasticsearch:
        condition: service_healthy
      azurite:
        condition: service_healthy
    build: 
      context: ../../
      dockerfile: samples/SqlServerToElasticProductionSample/Dockerfile
    environment:
      CUSTOMCONNSTR_SqlServer: "Server=sqlserver;Database=demo;User Id=sa;Password=yourStrong(!)Password;TrustServerCertificate=True"
      CUSTOMCONNSTR_AzureStorage: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;"
      ElasticsearchUrl: "http://elasticsearch:9200"
      StreamVersion: "1.0.0"
    ports:
      - "8000:8080"
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    healthcheck:
      test: nc 127.0.0.1 10000 -z
      interval: 1s
      retries: 30
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
      interval: 5s
      retries: 10
  sqlserver:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "yourStrong(!)Password"
      ACCEPT_EULA: "Y"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'yourStrong(!)Password' -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
  sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2022-latest
    volumes:
      - ./:/docker-entrypoint-initdb.d
    depends_on:
      sqlserver:
        condition: service_healthy
    command: "bash -c '/opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P \"yourStrong(!)Password\" -d master -i docker-entrypoint-initdb.d/bootstrap.sql'"