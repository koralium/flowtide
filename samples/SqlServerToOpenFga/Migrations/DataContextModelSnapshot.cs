// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SqlServerToOpenFga.Database;

#nullable disable

namespace SqlServerToOpenFga.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SqlServerToOpenFga.Database.Group", b =>
                {
                    b.Property<int>("GroupKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupKey"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupKey");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SqlServerToOpenFga.Database.User", b =>
                {
                    b.Property<int>("UserKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserKey"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserKey");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SqlServerToOpenFga.Database.UserGroup", b =>
                {
                    b.Property<int>("UserKey")
                        .HasColumnType("int");

                    b.Property<int>("GroupKey")
                        .HasColumnType("int");

                    b.HasKey("UserKey", "GroupKey");

                    b.HasIndex("GroupKey");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("SqlServerToOpenFga.Database.UserGroup", b =>
                {
                    b.HasOne("SqlServerToOpenFga.Database.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SqlServerToOpenFga.Database.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SqlServerToOpenFga.Database.Group", b =>
                {
                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("SqlServerToOpenFga.Database.User", b =>
                {
                    b.Navigation("UserGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
