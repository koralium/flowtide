// <auto-generated />
using System;
using FlowtideDotNet.Core.Tests.SmokeTests;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlowtideDotNet.SqlServer.Tests.Migrations
{
    [DbContext(typeof(TpchDbContext))]
    [Migration("20231015153123_initial")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DifferentialComputeDotNet.Core.Tests.SmokeTests.LineItem", b =>
                {
                    b.Property<long>("Orderkey")
                        .HasColumnType("bigint");

                    b.Property<int>("Linenumber")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Commitdate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<double>("Extendedprice")
                        .HasColumnType("float");

                    b.Property<string>("Linestatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Partkey")
                        .HasColumnType("bigint");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("Receiptdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Returnflag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Shipdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Shipinstruct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shipmode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Suppkey")
                        .HasColumnType("bigint");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.HasKey("Orderkey", "Linenumber");

                    b.ToTable("lineitems", (string)null);
                });

            modelBuilder.Entity("DifferentialComputeDotNet.Core.Tests.SmokeTests.Order", b =>
                {
                    b.Property<long>("Orderkey")
                        .HasColumnType("bigint");

                    b.Property<string>("Clerk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Custkey")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Orderdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Orderpriority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orderstatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Shippriority")
                        .HasColumnType("int");

                    b.Property<double>("Totalprice")
                        .HasColumnType("float");

                    b.HasKey("Orderkey");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("DifferentialComputeDotNet.Core.Tests.SmokeTests.Shipmode", b =>
                {
                    b.Property<int>("ShipmodeKey")
                        .HasColumnType("int");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShipmodeKey");

                    b.ToTable("shipmodes", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
