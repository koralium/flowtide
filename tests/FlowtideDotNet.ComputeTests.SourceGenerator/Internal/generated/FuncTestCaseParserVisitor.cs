//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./FuncTestCaseParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="FuncTestCaseParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IFuncTestCaseParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.doc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoc([NotNull] FuncTestCaseParser.DocContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHeader([NotNull] FuncTestCaseParser.HeaderContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.version"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVersion([NotNull] FuncTestCaseParser.VersionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.include"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInclude([NotNull] FuncTestCaseParser.IncludeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.testGroupDescription"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTestGroupDescription([NotNull] FuncTestCaseParser.TestGroupDescriptionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.testCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTestCase([NotNull] FuncTestCaseParser.TestCaseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>scalarFuncTestGroup</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.testGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScalarFuncTestGroup([NotNull] FuncTestCaseParser.ScalarFuncTestGroupContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>aggregateFuncTestGroup</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.testGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAggregateFuncTestGroup([NotNull] FuncTestCaseParser.AggregateFuncTestGroupContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArguments([NotNull] FuncTestCaseParser.ArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitResult([NotNull] FuncTestCaseParser.ResultContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument([NotNull] FuncTestCaseParser.ArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.aggFuncTestCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAggFuncTestCase([NotNull] FuncTestCaseParser.AggFuncTestCaseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multiArgAggregateFuncCall</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.aggFuncCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiArgAggregateFuncCall([NotNull] FuncTestCaseParser.MultiArgAggregateFuncCallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>compactAggregateFuncCall</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.aggFuncCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompactAggregateFuncCall([NotNull] FuncTestCaseParser.CompactAggregateFuncCallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>singleArgAggregateFuncCall</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.aggFuncCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSingleArgAggregateFuncCall([NotNull] FuncTestCaseParser.SingleArgAggregateFuncCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.tableData"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableData([NotNull] FuncTestCaseParser.TableDataContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.tableRows"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableRows([NotNull] FuncTestCaseParser.TableRowsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.dataColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDataColumn([NotNull] FuncTestCaseParser.DataColumnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.columnValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitColumnValues([NotNull] FuncTestCaseParser.ColumnValuesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] FuncTestCaseParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.qualifiedAggregateFuncArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedAggregateFuncArgs([NotNull] FuncTestCaseParser.QualifiedAggregateFuncArgsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.aggregateFuncArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAggregateFuncArgs([NotNull] FuncTestCaseParser.AggregateFuncArgsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.qualifiedAggregateFuncArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQualifiedAggregateFuncArg([NotNull] FuncTestCaseParser.QualifiedAggregateFuncArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.aggregateFuncArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAggregateFuncArg([NotNull] FuncTestCaseParser.AggregateFuncArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.numericLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumericLiteral([NotNull] FuncTestCaseParser.NumericLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.floatLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloatLiteral([NotNull] FuncTestCaseParser.FloatLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.nullArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullArg([NotNull] FuncTestCaseParser.NullArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.intArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntArg([NotNull] FuncTestCaseParser.IntArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.floatArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloatArg([NotNull] FuncTestCaseParser.FloatArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.decimalArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecimalArg([NotNull] FuncTestCaseParser.DecimalArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.booleanArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanArg([NotNull] FuncTestCaseParser.BooleanArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.stringArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringArg([NotNull] FuncTestCaseParser.StringArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.dateArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateArg([NotNull] FuncTestCaseParser.DateArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.timeArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeArg([NotNull] FuncTestCaseParser.TimeArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.timestampArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimestampArg([NotNull] FuncTestCaseParser.TimestampArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.timestampTzArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimestampTzArg([NotNull] FuncTestCaseParser.TimestampTzArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.intervalYearArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntervalYearArg([NotNull] FuncTestCaseParser.IntervalYearArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.intervalDayArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntervalDayArg([NotNull] FuncTestCaseParser.IntervalDayArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.fixedCharArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFixedCharArg([NotNull] FuncTestCaseParser.FixedCharArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.varCharArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarCharArg([NotNull] FuncTestCaseParser.VarCharArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.fixedBinaryArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFixedBinaryArg([NotNull] FuncTestCaseParser.FixedBinaryArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.precisionTimestampArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrecisionTimestampArg([NotNull] FuncTestCaseParser.PrecisionTimestampArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.precisionTimestampTZArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrecisionTimestampTZArg([NotNull] FuncTestCaseParser.PrecisionTimestampTZArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.listArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListArg([NotNull] FuncTestCaseParser.ListArgContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.literalList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralList([NotNull] FuncTestCaseParser.LiteralListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDataType([NotNull] FuncTestCaseParser.DataTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>boolean</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolean([NotNull] FuncTestCaseParser.BooleanContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>i8</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitI8([NotNull] FuncTestCaseParser.I8Context context);
	/// <summary>
	/// Visit a parse tree produced by the <c>i16</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitI16([NotNull] FuncTestCaseParser.I16Context context);
	/// <summary>
	/// Visit a parse tree produced by the <c>i32</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitI32([NotNull] FuncTestCaseParser.I32Context context);
	/// <summary>
	/// Visit a parse tree produced by the <c>i64</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitI64([NotNull] FuncTestCaseParser.I64Context context);
	/// <summary>
	/// Visit a parse tree produced by the <c>fp32</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFp32([NotNull] FuncTestCaseParser.Fp32Context context);
	/// <summary>
	/// Visit a parse tree produced by the <c>fp64</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFp64([NotNull] FuncTestCaseParser.Fp64Context context);
	/// <summary>
	/// Visit a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] FuncTestCaseParser.StringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>binary</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinary([NotNull] FuncTestCaseParser.BinaryContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>timestamp</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimestamp([NotNull] FuncTestCaseParser.TimestampContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>timestampTz</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimestampTz([NotNull] FuncTestCaseParser.TimestampTzContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>date</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDate([NotNull] FuncTestCaseParser.DateContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>time</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTime([NotNull] FuncTestCaseParser.TimeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>intervalYear</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntervalYear([NotNull] FuncTestCaseParser.IntervalYearContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>uuid</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUuid([NotNull] FuncTestCaseParser.UuidContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>userDefined</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserDefined([NotNull] FuncTestCaseParser.UserDefinedContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.booleanType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanType([NotNull] FuncTestCaseParser.BooleanTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.stringType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringType([NotNull] FuncTestCaseParser.StringTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.binaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryType([NotNull] FuncTestCaseParser.BinaryTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.timestampType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimestampType([NotNull] FuncTestCaseParser.TimestampTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.timestampTZType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimestampTZType([NotNull] FuncTestCaseParser.TimestampTZTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.intervalYearType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntervalYearType([NotNull] FuncTestCaseParser.IntervalYearTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.intervalDayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntervalDayType([NotNull] FuncTestCaseParser.IntervalDayTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.fixedCharType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFixedCharType([NotNull] FuncTestCaseParser.FixedCharTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.varCharType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarCharType([NotNull] FuncTestCaseParser.VarCharTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.fixedBinaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFixedBinaryType([NotNull] FuncTestCaseParser.FixedBinaryTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.decimalType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecimalType([NotNull] FuncTestCaseParser.DecimalTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.precisionTimestampType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrecisionTimestampType([NotNull] FuncTestCaseParser.PrecisionTimestampTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.precisionTimestampTZType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrecisionTimestampTZType([NotNull] FuncTestCaseParser.PrecisionTimestampTZTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>list</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.listType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitList([NotNull] FuncTestCaseParser.ListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.parameterizedType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterizedType([NotNull] FuncTestCaseParser.ParameterizedTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>integerLiteral</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.numericParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerLiteral([NotNull] FuncTestCaseParser.IntegerLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.substraitError"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubstraitError([NotNull] FuncTestCaseParser.SubstraitErrorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.funcOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncOption([NotNull] FuncTestCaseParser.FuncOptionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.optionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOptionName([NotNull] FuncTestCaseParser.OptionNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.optionValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOptionValue([NotNull] FuncTestCaseParser.OptionValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.funcOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncOptions([NotNull] FuncTestCaseParser.FuncOptionsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.nonReserved"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNonReserved([NotNull] FuncTestCaseParser.NonReservedContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FuncTestCaseParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] FuncTestCaseParser.IdentifierContext context);
}
