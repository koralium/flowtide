//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./FuncTestCaseParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="FuncTestCaseParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IFuncTestCaseParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.doc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoc([NotNull] FuncTestCaseParser.DocContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.doc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoc([NotNull] FuncTestCaseParser.DocContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHeader([NotNull] FuncTestCaseParser.HeaderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.header"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHeader([NotNull] FuncTestCaseParser.HeaderContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.version"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVersion([NotNull] FuncTestCaseParser.VersionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.version"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVersion([NotNull] FuncTestCaseParser.VersionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.include"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInclude([NotNull] FuncTestCaseParser.IncludeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.include"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInclude([NotNull] FuncTestCaseParser.IncludeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.testGroupDescription"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTestGroupDescription([NotNull] FuncTestCaseParser.TestGroupDescriptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.testGroupDescription"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTestGroupDescription([NotNull] FuncTestCaseParser.TestGroupDescriptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.testCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTestCase([NotNull] FuncTestCaseParser.TestCaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.testCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTestCase([NotNull] FuncTestCaseParser.TestCaseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>scalarFuncTestGroup</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.testGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalarFuncTestGroup([NotNull] FuncTestCaseParser.ScalarFuncTestGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>scalarFuncTestGroup</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.testGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalarFuncTestGroup([NotNull] FuncTestCaseParser.ScalarFuncTestGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>aggregateFuncTestGroup</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.testGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregateFuncTestGroup([NotNull] FuncTestCaseParser.AggregateFuncTestGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>aggregateFuncTestGroup</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.testGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregateFuncTestGroup([NotNull] FuncTestCaseParser.AggregateFuncTestGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArguments([NotNull] FuncTestCaseParser.ArgumentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArguments([NotNull] FuncTestCaseParser.ArgumentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResult([NotNull] FuncTestCaseParser.ResultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.result"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResult([NotNull] FuncTestCaseParser.ResultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] FuncTestCaseParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] FuncTestCaseParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.aggFuncTestCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggFuncTestCase([NotNull] FuncTestCaseParser.AggFuncTestCaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.aggFuncTestCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggFuncTestCase([NotNull] FuncTestCaseParser.AggFuncTestCaseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiArgAggregateFuncCall</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.aggFuncCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiArgAggregateFuncCall([NotNull] FuncTestCaseParser.MultiArgAggregateFuncCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiArgAggregateFuncCall</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.aggFuncCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiArgAggregateFuncCall([NotNull] FuncTestCaseParser.MultiArgAggregateFuncCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>compactAggregateFuncCall</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.aggFuncCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompactAggregateFuncCall([NotNull] FuncTestCaseParser.CompactAggregateFuncCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>compactAggregateFuncCall</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.aggFuncCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompactAggregateFuncCall([NotNull] FuncTestCaseParser.CompactAggregateFuncCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>singleArgAggregateFuncCall</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.aggFuncCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleArgAggregateFuncCall([NotNull] FuncTestCaseParser.SingleArgAggregateFuncCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>singleArgAggregateFuncCall</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.aggFuncCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleArgAggregateFuncCall([NotNull] FuncTestCaseParser.SingleArgAggregateFuncCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.tableData"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableData([NotNull] FuncTestCaseParser.TableDataContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.tableData"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableData([NotNull] FuncTestCaseParser.TableDataContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.tableRows"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableRows([NotNull] FuncTestCaseParser.TableRowsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.tableRows"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableRows([NotNull] FuncTestCaseParser.TableRowsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.dataColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataColumn([NotNull] FuncTestCaseParser.DataColumnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.dataColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataColumn([NotNull] FuncTestCaseParser.DataColumnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.columnValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnValues([NotNull] FuncTestCaseParser.ColumnValuesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.columnValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnValues([NotNull] FuncTestCaseParser.ColumnValuesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] FuncTestCaseParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] FuncTestCaseParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.qualifiedAggregateFuncArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifiedAggregateFuncArgs([NotNull] FuncTestCaseParser.QualifiedAggregateFuncArgsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.qualifiedAggregateFuncArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifiedAggregateFuncArgs([NotNull] FuncTestCaseParser.QualifiedAggregateFuncArgsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.aggregateFuncArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregateFuncArgs([NotNull] FuncTestCaseParser.AggregateFuncArgsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.aggregateFuncArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregateFuncArgs([NotNull] FuncTestCaseParser.AggregateFuncArgsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.qualifiedAggregateFuncArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifiedAggregateFuncArg([NotNull] FuncTestCaseParser.QualifiedAggregateFuncArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.qualifiedAggregateFuncArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifiedAggregateFuncArg([NotNull] FuncTestCaseParser.QualifiedAggregateFuncArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.aggregateFuncArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregateFuncArg([NotNull] FuncTestCaseParser.AggregateFuncArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.aggregateFuncArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregateFuncArg([NotNull] FuncTestCaseParser.AggregateFuncArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.numericLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericLiteral([NotNull] FuncTestCaseParser.NumericLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.numericLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericLiteral([NotNull] FuncTestCaseParser.NumericLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.floatLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloatLiteral([NotNull] FuncTestCaseParser.FloatLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.floatLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloatLiteral([NotNull] FuncTestCaseParser.FloatLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.nullArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullArg([NotNull] FuncTestCaseParser.NullArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.nullArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullArg([NotNull] FuncTestCaseParser.NullArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.intArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntArg([NotNull] FuncTestCaseParser.IntArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.intArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntArg([NotNull] FuncTestCaseParser.IntArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.floatArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloatArg([NotNull] FuncTestCaseParser.FloatArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.floatArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloatArg([NotNull] FuncTestCaseParser.FloatArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.decimalArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecimalArg([NotNull] FuncTestCaseParser.DecimalArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.decimalArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecimalArg([NotNull] FuncTestCaseParser.DecimalArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.booleanArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanArg([NotNull] FuncTestCaseParser.BooleanArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.booleanArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanArg([NotNull] FuncTestCaseParser.BooleanArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.stringArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringArg([NotNull] FuncTestCaseParser.StringArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.stringArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringArg([NotNull] FuncTestCaseParser.StringArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.dateArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateArg([NotNull] FuncTestCaseParser.DateArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.dateArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateArg([NotNull] FuncTestCaseParser.DateArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.timeArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeArg([NotNull] FuncTestCaseParser.TimeArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.timeArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeArg([NotNull] FuncTestCaseParser.TimeArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.timestampArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimestampArg([NotNull] FuncTestCaseParser.TimestampArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.timestampArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimestampArg([NotNull] FuncTestCaseParser.TimestampArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.timestampTzArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimestampTzArg([NotNull] FuncTestCaseParser.TimestampTzArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.timestampTzArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimestampTzArg([NotNull] FuncTestCaseParser.TimestampTzArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.intervalYearArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntervalYearArg([NotNull] FuncTestCaseParser.IntervalYearArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.intervalYearArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntervalYearArg([NotNull] FuncTestCaseParser.IntervalYearArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.intervalDayArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntervalDayArg([NotNull] FuncTestCaseParser.IntervalDayArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.intervalDayArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntervalDayArg([NotNull] FuncTestCaseParser.IntervalDayArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.fixedCharArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedCharArg([NotNull] FuncTestCaseParser.FixedCharArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.fixedCharArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedCharArg([NotNull] FuncTestCaseParser.FixedCharArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.varCharArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarCharArg([NotNull] FuncTestCaseParser.VarCharArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.varCharArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarCharArg([NotNull] FuncTestCaseParser.VarCharArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.fixedBinaryArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedBinaryArg([NotNull] FuncTestCaseParser.FixedBinaryArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.fixedBinaryArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedBinaryArg([NotNull] FuncTestCaseParser.FixedBinaryArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.precisionTimestampArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrecisionTimestampArg([NotNull] FuncTestCaseParser.PrecisionTimestampArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.precisionTimestampArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrecisionTimestampArg([NotNull] FuncTestCaseParser.PrecisionTimestampArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.precisionTimestampTZArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrecisionTimestampTZArg([NotNull] FuncTestCaseParser.PrecisionTimestampTZArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.precisionTimestampTZArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrecisionTimestampTZArg([NotNull] FuncTestCaseParser.PrecisionTimestampTZArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.listArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListArg([NotNull] FuncTestCaseParser.ListArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.listArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListArg([NotNull] FuncTestCaseParser.ListArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.literalList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralList([NotNull] FuncTestCaseParser.LiteralListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.literalList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralList([NotNull] FuncTestCaseParser.LiteralListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataType([NotNull] FuncTestCaseParser.DataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataType([NotNull] FuncTestCaseParser.DataTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolean</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolean([NotNull] FuncTestCaseParser.BooleanContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolean</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolean([NotNull] FuncTestCaseParser.BooleanContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>i8</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterI8([NotNull] FuncTestCaseParser.I8Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>i8</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitI8([NotNull] FuncTestCaseParser.I8Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>i16</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterI16([NotNull] FuncTestCaseParser.I16Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>i16</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitI16([NotNull] FuncTestCaseParser.I16Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>i32</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterI32([NotNull] FuncTestCaseParser.I32Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>i32</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitI32([NotNull] FuncTestCaseParser.I32Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>i64</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterI64([NotNull] FuncTestCaseParser.I64Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>i64</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitI64([NotNull] FuncTestCaseParser.I64Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>fp32</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFp32([NotNull] FuncTestCaseParser.Fp32Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>fp32</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFp32([NotNull] FuncTestCaseParser.Fp32Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>fp64</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFp64([NotNull] FuncTestCaseParser.Fp64Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>fp64</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFp64([NotNull] FuncTestCaseParser.Fp64Context context);
	/// <summary>
	/// Enter a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString([NotNull] FuncTestCaseParser.StringContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString([NotNull] FuncTestCaseParser.StringContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>binary</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinary([NotNull] FuncTestCaseParser.BinaryContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>binary</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinary([NotNull] FuncTestCaseParser.BinaryContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>timestamp</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimestamp([NotNull] FuncTestCaseParser.TimestampContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>timestamp</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimestamp([NotNull] FuncTestCaseParser.TimestampContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>timestampTz</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimestampTz([NotNull] FuncTestCaseParser.TimestampTzContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>timestampTz</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimestampTz([NotNull] FuncTestCaseParser.TimestampTzContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>date</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDate([NotNull] FuncTestCaseParser.DateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>date</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDate([NotNull] FuncTestCaseParser.DateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>time</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTime([NotNull] FuncTestCaseParser.TimeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>time</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTime([NotNull] FuncTestCaseParser.TimeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>intervalYear</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntervalYear([NotNull] FuncTestCaseParser.IntervalYearContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>intervalYear</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntervalYear([NotNull] FuncTestCaseParser.IntervalYearContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>uuid</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUuid([NotNull] FuncTestCaseParser.UuidContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>uuid</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUuid([NotNull] FuncTestCaseParser.UuidContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>userDefined</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUserDefined([NotNull] FuncTestCaseParser.UserDefinedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>userDefined</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUserDefined([NotNull] FuncTestCaseParser.UserDefinedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.booleanType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanType([NotNull] FuncTestCaseParser.BooleanTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.booleanType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanType([NotNull] FuncTestCaseParser.BooleanTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.stringType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringType([NotNull] FuncTestCaseParser.StringTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.stringType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringType([NotNull] FuncTestCaseParser.StringTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.binaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinaryType([NotNull] FuncTestCaseParser.BinaryTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.binaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinaryType([NotNull] FuncTestCaseParser.BinaryTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.timestampType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimestampType([NotNull] FuncTestCaseParser.TimestampTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.timestampType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimestampType([NotNull] FuncTestCaseParser.TimestampTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.timestampTZType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimestampTZType([NotNull] FuncTestCaseParser.TimestampTZTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.timestampTZType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimestampTZType([NotNull] FuncTestCaseParser.TimestampTZTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.intervalYearType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntervalYearType([NotNull] FuncTestCaseParser.IntervalYearTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.intervalYearType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntervalYearType([NotNull] FuncTestCaseParser.IntervalYearTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.intervalDayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntervalDayType([NotNull] FuncTestCaseParser.IntervalDayTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.intervalDayType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntervalDayType([NotNull] FuncTestCaseParser.IntervalDayTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.fixedCharType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedCharType([NotNull] FuncTestCaseParser.FixedCharTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.fixedCharType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedCharType([NotNull] FuncTestCaseParser.FixedCharTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.varCharType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarCharType([NotNull] FuncTestCaseParser.VarCharTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.varCharType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarCharType([NotNull] FuncTestCaseParser.VarCharTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.fixedBinaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedBinaryType([NotNull] FuncTestCaseParser.FixedBinaryTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.fixedBinaryType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedBinaryType([NotNull] FuncTestCaseParser.FixedBinaryTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.decimalType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecimalType([NotNull] FuncTestCaseParser.DecimalTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.decimalType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecimalType([NotNull] FuncTestCaseParser.DecimalTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.precisionTimestampType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrecisionTimestampType([NotNull] FuncTestCaseParser.PrecisionTimestampTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.precisionTimestampType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrecisionTimestampType([NotNull] FuncTestCaseParser.PrecisionTimestampTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.precisionTimestampTZType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrecisionTimestampTZType([NotNull] FuncTestCaseParser.PrecisionTimestampTZTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.precisionTimestampTZType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrecisionTimestampTZType([NotNull] FuncTestCaseParser.PrecisionTimestampTZTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>list</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.listType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterList([NotNull] FuncTestCaseParser.ListContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>list</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.listType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitList([NotNull] FuncTestCaseParser.ListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.parameterizedType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterizedType([NotNull] FuncTestCaseParser.ParameterizedTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.parameterizedType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterizedType([NotNull] FuncTestCaseParser.ParameterizedTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>integerLiteral</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.numericParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerLiteral([NotNull] FuncTestCaseParser.IntegerLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>integerLiteral</c>
	/// labeled alternative in <see cref="FuncTestCaseParser.numericParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerLiteral([NotNull] FuncTestCaseParser.IntegerLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.substraitError"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubstraitError([NotNull] FuncTestCaseParser.SubstraitErrorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.substraitError"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubstraitError([NotNull] FuncTestCaseParser.SubstraitErrorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.funcOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncOption([NotNull] FuncTestCaseParser.FuncOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.funcOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncOption([NotNull] FuncTestCaseParser.FuncOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.optionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionName([NotNull] FuncTestCaseParser.OptionNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.optionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionName([NotNull] FuncTestCaseParser.OptionNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.optionValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionValue([NotNull] FuncTestCaseParser.OptionValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.optionValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionValue([NotNull] FuncTestCaseParser.OptionValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.funcOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncOptions([NotNull] FuncTestCaseParser.FuncOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.funcOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncOptions([NotNull] FuncTestCaseParser.FuncOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.nonReserved"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonReserved([NotNull] FuncTestCaseParser.NonReservedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.nonReserved"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonReserved([NotNull] FuncTestCaseParser.NonReservedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="FuncTestCaseParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] FuncTestCaseParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="FuncTestCaseParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] FuncTestCaseParser.IdentifierContext context);
}
